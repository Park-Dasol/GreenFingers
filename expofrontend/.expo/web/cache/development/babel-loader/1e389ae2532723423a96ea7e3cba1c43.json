{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\multicampus\\\\Desktop\\\\s04p31c103\\\\frontend\\\\app\\\\components\\\\auth\\\\GoogleLogin.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport firebase from \"firebase\";\nimport * as Google from \"expo-google-app-auth\";\nimport * as GoogleSignIn from \"expo-google-sign-in\";\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n} else {\n  firebase.app();\n}\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyD91A1_T-nTAnoVRzyQErecdYrqiG3TFyI\",\n  authDomain: \"greenfingers-dbd68.firebaseapp.com\",\n  databaseURL: \"https://greenfingers-dbd68-default-rtdb.firebaseio.com\",\n  projectId: \"greenfingers-dbd68\",\n  storageBucket: \"greenfingers-dbd68.appspot.com\",\n  messagingSenderId: \"142725233287\",\n  appId: \"1:142725233287:android:15e062f54e21a186ad9622\"\n};\n\nvar GoogleLogin = function (_React$Component) {\n  _inherits(GoogleLogin, _React$Component);\n\n  var _super = _createSuper(GoogleLogin);\n\n  function GoogleLogin() {\n    var _this;\n\n    _classCallCheck(this, GoogleLogin);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      email: \"\",\n      password: \"\",\n      errorMessage: \"\",\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(GoogleLogin, [{\n    key: \"onLoginSuccess\",\n    value: function onLoginSuccess() {\n      console.log(\"logged in\");\n    }\n  }, {\n    key: \"signInWithGoogle\",\n    value: function signInWithGoogle() {\n      var result, credential, googleProfileData, message;\n      return _regeneratorRuntime.async(function signInWithGoogle$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Google.logInAsync({\n                androidClientId: \"142725233287-96k9h1bpp3v9r50auhteprqhm8m6uaii.apps.googleusercontent.com\",\n                iosClientId: \"142725233287-rkshitu6bla15uqg6htnf8vcpjd1cl8u.apps.googleusercontent.com\",\n                webClientId: \"142725233287-96k9h1bpp3v9r50auhteprqhm8m6uaii.apps.googleusercontent.com\",\n                redirectUrl: \"com.dasolpark.frontend:/oauth2redirect/google\",\n                scopes: [\"profile\", \"email\"]\n              }));\n\n            case 3:\n              result = _context.sent;\n              console.log(result);\n\n              if (!(result.type === \"success\")) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL));\n\n            case 8:\n              credential = firebase.auth.GoogleAuthProvider.credential(data.idToken, data.accessToken);\n              _context.next = 11;\n              return _regeneratorRuntime.awrap(firebase.auth().signInWithCredential(credential));\n\n            case 11:\n              googleProfileData = _context.sent;\n              this.onLoginSuccess.bind(this);\n\n            case 13:\n              _context.next = 19;\n              break;\n\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](0);\n              message = _context.t0.message;\n              alert(\"login: Error:\" + message);\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[0, 15]], Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(TouchableWithoutFeedback, {\n        onPress: function onPress() {\n          Keyboard.dismiss();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 7\n        }\n      }, React.createElement(SafeAreaView, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          width: \"86%\",\n          marginTop: 10\n        },\n        onPress: function onPress() {\n          return _this2.signInWithGoogle();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.googleButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          letterSpacing: 0.5,\n          fontSize: 16,\n          color: \"#707070\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }\n      }, \"Continue with Google\")))));\n    }\n  }]);\n\n  return GoogleLogin;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  form: {\n    width: \"86%\",\n    marginTop: 15\n  },\n  logo: {\n    marginTop: 20\n  },\n  input: {\n    fontSize: 20,\n    borderColor: \"#707070\",\n    borderBottomWidth: 1,\n    paddingBottom: 1.5,\n    marginTop: 25.5\n  },\n  button: {\n    backgroundColor: \"#3A559F\",\n    height: 44,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 22\n  },\n  googleButton: {\n    backgroundColor: \"#FFFFFF\",\n    height: 44,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 22,\n    borderWidth: 1,\n    borderColor: \"#707070\"\n  }\n});\nexport default GoogleLogin;","map":{"version":3,"sources":["C:/Users/multicampus/Desktop/s04p31c103/frontend/app/components/auth/GoogleLogin.js"],"names":["React","firebase","Google","GoogleSignIn","apps","length","initializeApp","firebaseConfig","app","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","GoogleLogin","state","email","password","errorMessage","loading","console","log","logInAsync","androidClientId","iosClientId","webClientId","redirectUrl","scopes","result","type","auth","setPersistence","Auth","Persistence","LOCAL","credential","GoogleAuthProvider","data","idToken","accessToken","signInWithCredential","googleProfileData","onLoginSuccess","bind","message","alert","Keyboard","dismiss","flex","width","marginTop","signInWithGoogle","styles","googleButton","letterSpacing","fontSize","color","Component","StyleSheet","create","container","flexDirection","alignItems","form","logo","input","borderColor","borderBottomWidth","paddingBottom","button","backgroundColor","height","justifyContent","borderRadius","borderWidth"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  KeyboardAvoidingView,\r\n  ActivityIndicator,\r\n  TouchableWithoutFeedback,\r\n  Keyboard,\r\n} from \"react-native\";\r\n// import \"firebase/firestore\"\r\nimport firebase from \"firebase\";\r\nimport * as Google from \"expo-google-app-auth\";\r\nimport * as GoogleSignIn from \"expo-google-sign-in\";\r\n\r\n// import \"firebase/auth\";\r\n// import \"firebase/database\";\r\n// import {\r\n//   ANDROID_CLIENT_ID,\r\n//   IOS_CLIENT_ID,\r\n//   ANDROID_STANDALONG_CLIENT_ID,\r\n// } from \"@env\";\r\n\r\n//firebase\r\n// import firebase from \"firebase/app\";\r\nimport {\r\n  GOOGLE_CLIENT_ID,\r\n  API_KEY,\r\n  MESSAGING_SENDER_ID,\r\n  APP_ID,\r\n  AUTH_DOMAIN,\r\n  DATABASE_URL,\r\n  PROJECT_ID,\r\n  STORAGE_BUCKET,\r\n  ANDROID_CLIENT_ID,\r\n  IOS_CLIENT_ID,\r\n} from \"@env\";\r\n\r\n// firebase.initializeApp(firebaseConfig);\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(firebaseConfig);\r\n} else {\r\n  firebase.app(); // if already initialized, use that one\r\n}\r\n\r\nconst firebaseConfig = {\r\n  apiKey: API_KEY,\r\n  authDomain: AUTH_DOMAIN,\r\n  databaseURL: DATABASE_URL,\r\n  projectId: PROJECT_ID,\r\n  storageBucket: STORAGE_BUCKET,\r\n  messagingSenderId: MESSAGING_SENDER_ID,\r\n  appId: APP_ID,\r\n  // measurementId: 'G-2NQFW6NDY4',\r\n};\r\n\r\nclass GoogleLogin extends React.Component {\r\n  state = { email: \"\", password: \"\", errorMessage: \"\", loading: false };\r\n  onLoginSuccess() {\r\n    console.log(\"logged in\");\r\n    // this.props.navigation.navigate(\"App\");\r\n  }\r\n\r\n  // onLoginFailure(errorMessage) {\r\n  //   this.setState({ error: errorMessage, loading: false });\r\n  // }\r\n  // renderLoading() {\r\n  //   if (this.state.loading) {\r\n  //     return (\r\n  //       <View>\r\n  //         <ActivityIndicator size={\"large\"} />\r\n  //       </View>\r\n  //     );\r\n  //   }\r\n  // }\r\n\r\n  async signInWithGoogle() {\r\n    try {\r\n      const result = await Google.logInAsync({\r\n        androidClientId: ANDROID_CLIENT_ID,\r\n        iosClientId: IOS_CLIENT_ID,\r\n        webClientId:\r\n          \"142725233287-96k9h1bpp3v9r50auhteprqhm8m6uaii.apps.googleusercontent.com\",\r\n        redirectUrl: \"com.dasolpark.frontend:/oauth2redirect/google\",\r\n        // behavior: \"web\",\r\n        scopes: [\"profile\", \"email\"],\r\n      });\r\n      console.log(result);\r\n      if (result.type === \"success\") {\r\n        await firebase\r\n          .auth()\r\n          .setPersistence(firebase.auth.Auth.Persistence.LOCAL);\r\n        const credential = firebase.auth.GoogleAuthProvider.credential(\r\n          data.idToken,\r\n          data.accessToken\r\n        );\r\n        const googleProfileData = await firebase\r\n          .auth()\r\n          .signInWithCredential(credential);\r\n        this.onLoginSuccess.bind(this);\r\n      }\r\n    } catch ({ message }) {\r\n      alert(\"login: Error:\" + message);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <TouchableWithoutFeedback\r\n        onPress={() => {\r\n          Keyboard.dismiss();\r\n        }}\r\n      >\r\n        <SafeAreaView style={{ flex: 1 }}>\r\n          <TouchableOpacity\r\n            style={{ width: \"86%\", marginTop: 10 }}\r\n            onPress={() => this.signInWithGoogle()}\r\n          >\r\n            <View style={styles.googleButton}>\r\n              <Text\r\n                style={{\r\n                  letterSpacing: 0.5,\r\n                  fontSize: 16,\r\n                  color: \"#707070\",\r\n                }}\r\n              >\r\n                Continue with Google\r\n              </Text>\r\n            </View>\r\n          </TouchableOpacity>\r\n        </SafeAreaView>\r\n      </TouchableWithoutFeedback>\r\n    );\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"86%\",\r\n    marginTop: 15,\r\n  },\r\n  logo: {\r\n    marginTop: 20,\r\n  },\r\n  input: {\r\n    fontSize: 20,\r\n    borderColor: \"#707070\",\r\n    borderBottomWidth: 1,\r\n    paddingBottom: 1.5,\r\n    marginTop: 25.5,\r\n  },\r\n  button: {\r\n    backgroundColor: \"#3A559F\",\r\n    height: 44,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 22,\r\n  },\r\n  googleButton: {\r\n    backgroundColor: \"#FFFFFF\",\r\n    height: 44,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 22,\r\n    borderWidth: 1,\r\n    borderColor: \"#707070\",\r\n  },\r\n});\r\nexport default GoogleLogin;\r\n\r\n//https://stackoverflow.com/questions/63435166/android-problem-with-expo-google-app-auth\r\n"]},"metadata":{},"sourceType":"module"}