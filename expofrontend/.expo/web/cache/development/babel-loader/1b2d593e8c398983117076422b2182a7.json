{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Textarea = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _jsxFileName = \"src/basic/Textarea.js\";\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _nativeBaseShoutemTheme = require(\"native-base-shoutem-theme\");\n\nvar _platform = require(\"../theme/variables/platform\");\n\nvar _platform2 = _interopRequireDefault(_platform);\n\nvar _computeProps = require(\"../utils/computeProps\");\n\nvar _computeProps2 = _interopRequireDefault(_computeProps);\n\nvar _mapPropsToStyleNames = require(\"../utils/mapPropsToStyleNames\");\n\nvar _mapPropsToStyleNames2 = _interopRequireDefault(_mapPropsToStyleNames);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Textarea = function (_Component) {\n  _inherits(Textarea, _Component);\n\n  function Textarea() {\n    _classCallCheck(this, Textarea);\n\n    return _possibleConstructorReturn(this, (Textarea.__proto__ || Object.getPrototypeOf(Textarea)).apply(this, arguments));\n  }\n\n  _createClass(Textarea, [{\n    key: \"getStyle\",\n    value: function getStyle() {\n      return {\n        textarea: {\n          height: this.props.rowSpan ? this.props.rowSpan * 25 : 60\n        }\n      };\n    }\n  }, {\n    key: \"prepareRootProps\",\n    value: function prepareRootProps() {\n      var defaultProps = {\n        style: this.getStyle().textarea\n      };\n      return (0, _computeProps2.default)(this.props, defaultProps);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _react2.default.createElement(_reactNative.TextInput, _extends({\n        ref: function ref(c) {\n          _this2._textInput = c;\n          _this2._root = c;\n        }\n      }, this.prepareRootProps(), {\n        multiline: true,\n        placeholderTextColor: this.props.placeholderTextColor ? this.props.placeholderTextColor : _platform2.default.inputColorPlaceholder,\n        underlineColorAndroid: \"rgba(0,0,0,0)\",\n        editable: this.props.disabled ? false : true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        }\n      }));\n    }\n  }]);\n\n  return Textarea;\n}(_react.Component);\n\nTextarea.propTypes = _extends({}, _reactNative.TextInput.propTypes, {\n  style: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.number, _propTypes2.default.array]),\n  rowSpan: _propTypes2.default.number,\n  bordered: _propTypes2.default.bool,\n  underline: _propTypes2.default.bool\n});\nvar StyledTextarea = (0, _nativeBaseShoutemTheme.connectStyle)(\"NativeBase.Textarea\", {}, _mapPropsToStyleNames2.default)(Textarea);\nexports.Textarea = StyledTextarea;","map":{"version":3,"sources":["../../../src/basic/Textarea.js"],"names":["Textarea","Component","textarea","height","defaultProps","style","variables","TextInput","PropTypes","rowSpan","bordered","underline","StyledTextarea","mapPropsToStyleNames"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;yCACA,U;;;;AACA,IAAA,uBAAA,GAAA,OAAA,CAAA,2BAAA,CAAA;;AACA,IAAA,SAAA,GAAA,OAAA,+BAAA;;;;AACA,IAAA,aAAA,GAAA,OAAA,yBAAA;;;;AACA,IAAA,qBAAA,GAAA,OAAA,iCAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEMA;;AAAAA,IAAAA,Q;;;;;;;;;;;+BACO;AACT,aAAO;AACLE,QAAAA,QAAAA,EAAU;AACRC,UAAAA,MAAAA,EAAQ,KAAA,KAAA,CAAA,OAAA,GAAqB,KAAA,KAAA,CAAA,OAAA,GAArB,EAAA,GAFZ;AACY;AADL,OAAP;;;;uCAOiB;AACjB,UAAMC,YAAAA,GAAe;AACnBC,QAAAA,KAAAA,EAAO,KAAA,QAAA,GADT;AAAqB,OAArB;AAGA,aAAO,CAAA,GAAA,cAAA,CAAA,OAAA,EAAa,KAAb,KAAA,EAAP,YAAO,CAAP;;;;6BAEO;AAAA,UAAA,MAAA,GAAA,IAAA;;AACP,aACD,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAD,SAAA,EAAA,QAAA,CAAA;AACC,QAAA,GAAA,EAAK,SAAA,GAAA,CAAA,CAAA,EAAK;AACZ,UAAA,MAAA,CAAA,UAAA,GAAA,CAAA;AACA,UAAA,MAAA,CAAA,KAAA,GAAA,CAAA;AAHC;AAAA,OAAA,EAKK,KALL,gBAKK,EALL,EAAA;AAMC,QAAA,SAAA,EAND,IAAA;AAOC,QAAA,oBAAA,EACC,KAAA,KAAA,CAAA,oBAAA,GAAkC,KAAA,KAAA,CAAlC,oBAAA,GAAoEC,UAAAA,CAAAA,OAAAA,CARtE,qBAAA;AAUC,QAAA,qBAAA,EAVD,eAAA;AAWC,QAAA,QAAA,EAAU,KAAA,KAAA,CAAA,QAAA,GAAA,KAAA,GAXX,IAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EADC;AACD;AAAA,OAAA,CAAA,CADC;;;;;EAhBmBL,MAAAA,CAAAA,S,CAAjBD;;AAkCNA,QAAAA,CAAAA,SAAAA,GAAAA,QAAAA,CAAAA,EAAAA,EACKO,YAAAA,CAAAA,SAAAA,CADLP,SAAAA,EAAAA;AAEEK,EAAAA,KAAAA,EAAOG,WAAAA,CAAAA,OAAAA,CAAAA,SAAAA,CAAoB,CAACA,WAAAA,CAAAA,OAAAA,CAAD,MAAA,EAAmBA,WAAAA,CAAAA,OAAAA,CAAnB,MAAA,EAAqCA,WAAAA,CAAAA,OAAAA,CAFlER,KAE6B,CAApBQ,CAFTR;AAGES,EAAAA,OAAAA,EAASD,WAAAA,CAAAA,OAAAA,CAHXR,MAAAA;AAIEU,EAAAA,QAAAA,EAAUF,WAAAA,CAAAA,OAAAA,CAJZR,IAAAA;AAKEW,EAAAA,SAAAA,EAAWH,WAAAA,CAAAA,OAAAA,CALbR;AAAAA,CAAAA,CAAAA;AAQA,IAAMY,cAAAA,GAAiB,CAAA,GAAA,uBAAA,CAAA,YAAA,EAAA,qBAAA,EAAA,EAAA,EAAwCC,sBAAAA,CAAxC,OAAA,EAAvB,QAAuB,CAAvB;QAE2Bb,Q,GAAlBY,c","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TextInput } from \"react-native\";\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport variables from \"../theme/variables/platform\";\nimport computeProps from \"../utils/computeProps\";\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\n\nclass Textarea extends Component {\n  getStyle() {\n    return {\n      textarea: {\n        height: this.props.rowSpan ? this.props.rowSpan * 25 : 60,\n      },\n    };\n  }\n\n  prepareRootProps() {\n    const defaultProps = {\n      style: this.getStyle().textarea,\n    };\n    return computeProps(this.props, defaultProps);\n  }\n  render() {\n    return (\n\t\t\t<TextInput\n\t\t\t\tref={c => {\n  this._textInput = c;\n  this._root = c;\n}}\n\t\t\t\t{...this.prepareRootProps()}\n\t\t\t\tmultiline\n\t\t\t\tplaceholderTextColor={\n\t\t\t\t\tthis.props.placeholderTextColor ? this.props.placeholderTextColor : variables.inputColorPlaceholder\n\t\t\t\t}\n\t\t\t\tunderlineColorAndroid=\"rgba(0,0,0,0)\"\n\t\t\t\teditable={this.props.disabled ? false : true}\n\t\t\t/>\n    );\n  }\n}\n\nTextarea.propTypes = {\n  ...TextInput.propTypes,\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  rowSpan: PropTypes.number,\n  bordered: PropTypes.bool,\n  underline: PropTypes.bool,\n};\n\nconst StyledTextarea = connectStyle(\"NativeBase.Textarea\", {}, mapPropsToStyleNames)(Textarea);\n\nexport { StyledTextarea as Textarea };\n"]},"metadata":{},"sourceType":"script"}