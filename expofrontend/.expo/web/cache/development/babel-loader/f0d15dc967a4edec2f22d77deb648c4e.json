{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\multicampus\\\\Desktop\\\\s04p31c103\\\\frontend\\\\app\\\\screens\\\\auth\\\\Login.js\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Container, Header, Content, Input, Item, Button, StyleProvider } from \"native-base\";\nimport \"react-native-gesture-handler\";\nimport { useState } from \"react\";\nimport { AuthButton, AuthButtonText, SocialButton, SocialButtonText } from \"../../assets/theme/authstyles\";\nimport * as firebase from \"firebase\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyByf9LZYSK_axyPrl5WCualKDexIkEhoMk\",\n  authDomain: \"greenfingers-dbd68.firebaseapp.com\",\n  databaseURL: \"https://greenfingers-dbd68-default-rtdb.firebaseio.com\",\n  projectId: \"greenfingers-dbd68\",\n  storageBucket: \"greenfingers-dbd68.appspot.com\",\n  messagingSenderId: \"142725233287\",\n  appId: \"1:142725233287:android:ebd37899b58f6f88ad9622\"\n};\nexport function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isIDFocused = _useState2[0],\n      setIsIDFocused = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isPWFocused = _useState4[0],\n      setIsPWFocused = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loggedIn = _useState6[0],\n      setloggedIn = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      userInfo = _useState8[0],\n      setuserInfo = _useState8[1];\n\n  return React.createElement(Container, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.halftop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.logotext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, \"Green\")), React.createElement(View, {\n    style: styles.halfbottom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.logotext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, \"Fingers\"))), React.createElement(View, {\n    style: styles.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.pairitem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, React.createElement(Item, {\n    style: [styles.singleitem, isIDFocused ? styles.focused : styles.blurred],\n    regular: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, React.createElement(Input, {\n    placeholder: \"ID\",\n    onBlur: function onBlur() {\n      return setIsIDFocused(false);\n    },\n    onFocus: function onFocus() {\n      return setIsIDFocused(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  })), React.createElement(Item, {\n    style: [styles.singleitem, isPWFocused ? styles.focused : styles.blurred],\n    regular: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, React.createElement(Input, {\n    placeholder: \"PASSWORD\",\n    onBlur: function onBlur() {\n      return setIsPWFocused(false);\n    },\n    onFocus: function onFocus() {\n      return setIsPWFocused(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }))), React.createElement(View, {\n    style: styles.pairitem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, React.createElement(AuthButton, {\n    full: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, React.createElement(AuthButtonText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, \"\\uB85C\\uADF8\\uC778\")), React.createElement(SocialButton, {\n    full: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, React.createElement(SocialButtonText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, \"Sign in with Google\"))), React.createElement(View, {\n    style: styles.textlinkwrap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.textleft,\n    title: \"Signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\"), React.createElement(Text, {\n    style: styles.textmiddle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, \"|\"), React.createElement(Text, {\n    style: styles.textright,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, \"\\uBE44\\uD68C\\uC6D0 \\uC785\\uC7A5\"))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#F9F9F9\"\n  },\n  logo: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"flex-start\",\n    paddingHorizontal: 60\n  },\n  halftop: {\n    flex: 3,\n    justifyContent: \"flex-end\",\n    alignItems: \"flex-start\"\n  },\n  halfbottom: {\n    flex: 2,\n    justifyContent: \"flex-start\",\n    alignItems: \"flex-start\"\n  },\n  logotext: {\n    fontSize: 35,\n    fontWeight: \"700\",\n    color: \"#29582C\"\n  },\n  form: {\n    flex: 2,\n    paddingHorizontal: 60\n  },\n  pairitem: {\n    flex: 1,\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    alignSelf: \"stretch\",\n    marginBottom: 0\n  },\n  textlinkwrap: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"flex-start\"\n  },\n  textleft: {\n    flex: 5,\n    textAlign: \"right\"\n  },\n  textmiddle: {\n    flex: 1,\n    textAlign: \"center\"\n  },\n  textright: {\n    flex: 5,\n    textAlign: \"left\"\n  },\n  singleitem: {\n    marginVertical: 4,\n    borderRadius: 12,\n    backgroundColor: \"white\"\n  },\n  focused: {\n    borderColor: \"#8AD169\",\n    borderTopWidth: 1.1,\n    borderBottomWidth: 1.1,\n    borderLeftWidth: 1.1,\n    borderRightWidth: 1.1\n  },\n  blurred: {\n    borderColor: \"#ECECE2\"\n  }\n});","map":{"version":3,"sources":["C:/Users/multicampus/Desktop/s04p31c103/frontend/app/screens/auth/Login.js"],"names":["React","Container","Header","Content","Input","Item","Button","StyleProvider","useState","AuthButton","AuthButtonText","SocialButton","SocialButtonText","firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","LoginScreen","navigation","isIDFocused","setIsIDFocused","isPWFocused","setIsPWFocused","loggedIn","setloggedIn","userInfo","setuserInfo","styles","container","logo","halftop","logotext","halfbottom","form","pairitem","singleitem","focused","blurred","textlinkwrap","textleft","textmiddle","textright","StyleSheet","create","backgroundColor","flex","justifyContent","alignItems","paddingHorizontal","fontSize","fontWeight","color","alignSelf","marginBottom","flexDirection","textAlign","marginVertical","borderRadius","borderColor","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { View, Text, StyleSheet, SafeAreaView, TextInput } from \"react-native\";\r\nimport {\r\n  Container,\r\n  Header,\r\n  Content,\r\n  Input,\r\n  Item,\r\n  Button,\r\n  StyleProvider,\r\n} from \"native-base\";\r\nimport \"react-native-gesture-handler\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  AuthButton,\r\n  AuthButtonText,\r\n  SocialButton,\r\n  SocialButtonText,\r\n} from \"../../assets/theme/authstyles\";\r\n\r\n//google login\r\n// import {\r\n//   GoogleSignin,\r\n//   GoogleSigninButton,\r\n//   statusCodes,\r\n// } from \"react-native-google-signin\";\r\n// import * as Google from \"expo-google-app-auth\";\r\nimport {\r\n  GoogleClientId,\r\n  apiKey,\r\n  messagingSenderId,\r\n  appId,\r\n  authDomain,\r\n  databaseURL,\r\n  projectId,\r\n  storageBucket,\r\n} from \"@env\";\r\nimport * as firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: apiKey,\r\n  authDomain: authDomain,\r\n  databaseURL: databaseURL,\r\n  projectId: projectId,\r\n  storageBucket: storageBucket,\r\n  messagingSenderId: messagingSenderId,\r\n  appId: appId,\r\n  // measurementId: 'G-2NQFW6NDY4',\r\n};\r\n\r\nexport function LoginScreen({ navigation }) {\r\n  const [isIDFocused, setIsIDFocused] = useState(false);\r\n  const [isPWFocused, setIsPWFocused] = useState(false);\r\n\r\n  // google login\r\n  const [loggedIn, setloggedIn] = useState(false);\r\n  const [userInfo, setuserInfo] = useState([]);\r\n\r\n  // _signIn = async () => {\r\n  //   try {\r\n  //     await GoogleSignin.hasPlayServices();\r\n  //     const { accessToken, idToken } = await GoogleSignin.signIn();\r\n  //     setloggedIn(true);\r\n  //     console.log(\"hi\");\r\n  //   } catch (error) {\r\n  //     if (error.code === statusCodes.SIGN_IN_CANCELLED) {\r\n  //       // user cancelled the login flow\r\n  //       alert(\"Cancel\");\r\n  //     } else if (error.code === statusCodes.IN_PROGRESS) {\r\n  //       alert(\"Signin in progress\");\r\n  //       // operation (f.e. sign in) is in progress already\r\n  //     } else if (error.code === statusCodes.PLAY_SERVICES_NOT_AVAILABLE) {\r\n  //       alert(\"PLAY_SERVICES_NOT_AVAILABLE\");\r\n  //       // play services not available or outdated\r\n  //     } else {\r\n  //       // some other error happened\r\n  //     }\r\n  //   }\r\n  // };\r\n  // useEffect(() => {\r\n  //   GoogleSignin.configure({\r\n  //     scopes: [\"email\"], // what API you want to access on behalf of the user, default is email and profile\r\n  //     webClientId: GoogleClientId, // client ID of type WEB for your server (needed to verify user ID and offline access)\r\n  //     offlineAccess: true, // if you want to access Google API on behalf of the user FROM YOUR SERVER\r\n  //   });\r\n  // }, []);\r\n\r\n  // async function signInWithGoogleAsync() {\r\n  //   try {\r\n  //     const result = await Google.logInAsync({\r\n  //       behavior: \"web\",\r\n  //       iosClientId: IOS_CLIENT_ID,\r\n  //       //androidClientId: AND_CLIENT_ID,\r\n  //       scopes: [\"profile\", \"email\"],\r\n  //     });\r\n\r\n  //     if (result.type === \"success\") {\r\n  //       return result.accessToken;\r\n  //     } else {\r\n  //       return { cancelled: true };\r\n  //     }\r\n  //   } catch (e) {\r\n  //     return { error: true };\r\n  //   }\r\n  // }\r\n  return (\r\n    <Container style={styles.container}>\r\n      <View style={styles.logo}>\r\n        <View style={styles.halftop}>\r\n          <Text style={styles.logotext}>Green</Text>\r\n        </View>\r\n        <View style={styles.halfbottom}>\r\n          <Text style={styles.logotext}>Fingers</Text>\r\n        </View>\r\n      </View>\r\n      <View style={styles.form}>\r\n        <View style={styles.pairitem}>\r\n          <Item\r\n            style={[\r\n              styles.singleitem,\r\n              isIDFocused ? styles.focused : styles.blurred,\r\n            ]}\r\n            regular\r\n          >\r\n            <Input\r\n              placeholder=\"ID\"\r\n              onBlur={() => setIsIDFocused(false)}\r\n              onFocus={() => setIsIDFocused(true)}\r\n            />\r\n          </Item>\r\n          <Item\r\n            style={[\r\n              styles.singleitem,\r\n              isPWFocused ? styles.focused : styles.blurred,\r\n            ]}\r\n            regular\r\n          >\r\n            <Input\r\n              placeholder=\"PASSWORD\"\r\n              onBlur={() => setIsPWFocused(false)}\r\n              onFocus={() => setIsPWFocused(true)}\r\n            />\r\n          </Item>\r\n        </View>\r\n        <View style={styles.pairitem}>\r\n          <AuthButton full>\r\n            <AuthButtonText>로그인</AuthButtonText>\r\n          </AuthButton>\r\n          <SocialButton full>\r\n            <SocialButtonText>Sign in with Google</SocialButtonText>\r\n          </SocialButton>\r\n        </View>\r\n        <View style={styles.textlinkwrap}>\r\n          <Text style={styles.textleft} title=\"Signup\">\r\n            회원가입\r\n          </Text>\r\n          <Text style={styles.textmiddle}>|</Text>\r\n          <Text style={styles.textright}>비회원 입장</Text>\r\n        </View>\r\n      </View>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: \"#F9F9F9\",\r\n  },\r\n  logo: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"flex-start\",\r\n    paddingHorizontal: 60,\r\n  },\r\n  halftop: {\r\n    flex: 3,\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"flex-start\",\r\n  },\r\n  halfbottom: {\r\n    flex: 2,\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"flex-start\",\r\n  },\r\n  logotext: {\r\n    fontSize: 35,\r\n    fontWeight: \"700\",\r\n    color: \"#29582C\",\r\n  },\r\n  form: {\r\n    flex: 2,\r\n    paddingHorizontal: 60,\r\n  },\r\n  pairitem: {\r\n    flex: 1,\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n    alignSelf: \"stretch\",\r\n    marginBottom: 0,\r\n  },\r\n  textlinkwrap: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"flex-start\",\r\n  },\r\n  textleft: {\r\n    flex: 5,\r\n    textAlign: \"right\",\r\n  },\r\n  textmiddle: {\r\n    flex: 1,\r\n    textAlign: \"center\",\r\n  },\r\n  textright: {\r\n    flex: 5,\r\n    textAlign: \"left\",\r\n  },\r\n  singleitem: {\r\n    marginVertical: 4,\r\n    borderRadius: 12,\r\n    backgroundColor: \"white\",\r\n  },\r\n  focused: {\r\n    borderColor: \"#8AD169\",\r\n    borderTopWidth: 1.1,\r\n    borderBottomWidth: 1.1,\r\n    borderLeftWidth: 1.1,\r\n    borderRightWidth: 1.1,\r\n  },\r\n  blurred: {\r\n    borderColor: \"#ECECE2\",\r\n  },\r\n});\r\n\r\n//https://medium.com/@asumansenol/firebase-authentication-using-google-facebook-and-email-password-log-in-in-expo-react-native-3bb5ac8461c7\r\n//https://www.youtube.com/watch?v=ZcaQJoXY-3Q&list=PLy9JCsy2u97nVN5GxrjC6rv9XfyxoDtB_\r\n\r\n//https://dev.to/harleypadua/google-authentication-with-expo-and-react-native-2l24\r\n\r\n//클래스형\r\n//https://www.section.io/engineering-education/react-native-firebase-google-authentication/\r\n"]},"metadata":{},"sourceType":"module"}