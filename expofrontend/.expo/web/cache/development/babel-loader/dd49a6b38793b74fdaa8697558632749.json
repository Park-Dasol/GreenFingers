{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ToastContainer = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _jsxFileName = \"src/basic/ToastContainer.js\";\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _nativeBaseShoutemTheme = require(\"native-base-shoutem-theme\");\n\nvar _Text = require(\"./Text\");\n\nvar _Button = require(\"./Button\");\n\nvar _View = require(\"./View\");\n\nvar _Toast = require(\"./Toast\");\n\nvar _mapPropsToStyleNames = require(\"../utils/mapPropsToStyleNames\");\n\nvar _mapPropsToStyleNames2 = _interopRequireDefault(_mapPropsToStyleNames);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ToastContainer = function (_Component) {\n  _inherits(ToastContainer, _Component);\n\n  function ToastContainer(props) {\n    _classCallCheck(this, ToastContainer);\n\n    var _this = _possibleConstructorReturn(this, (ToastContainer.__proto__ || Object.getPrototypeOf(ToastContainer)).call(this, props));\n\n    _this.state = {\n      modalVisible: false,\n      fadeAnim: new _reactNative.Animated.Value(0)\n    };\n    return _this;\n  }\n\n  _createClass(ToastContainer, [{\n    key: \"getToastStyle\",\n    value: function getToastStyle() {\n      return {\n        position: \"absolute\",\n        opacity: this.state.fadeAnim,\n        width: \"100%\",\n        elevation: 9,\n        paddingHorizontal: _reactNative.Platform.OS === \"ios\" ? 20 : 0,\n        top: this.state.position === \"top\" ? this.getTop() : undefined,\n        bottom: this.state.position === \"bottom\" ? this.getTop() : undefined\n      };\n    }\n  }, {\n    key: \"getTop\",\n    value: function getTop() {\n      if (_reactNative.Platform.OS === \"ios\") {\n        return 30;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"getButtonText\",\n    value: function getButtonText(buttonText) {\n      if (buttonText) {\n        if (buttonText.trim().length === 0) {\n          return undefined;\n        } else return buttonText;\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"getModalState\",\n    value: function getModalState() {\n      return this.state.modalVisible;\n    }\n  }, {\n    key: \"showToast\",\n    value: function showToast(_ref) {\n      var config = _ref.config;\n      this.setState({\n        modalVisible: true,\n        text: config.text,\n        buttonText: this.getButtonText(config.buttonText),\n        type: config.type,\n        position: config.position ? config.position : \"bottom\",\n        supportedOrientations: config.supportedOrientations,\n        style: config.style,\n        buttonTextStyle: config.buttonTextStyle,\n        buttonStyle: config.buttonStyle,\n        textStyle: config.textStyle,\n        onClose: config.onClose\n      });\n\n      if (this.closeTimeout) {\n        clearTimeout(this.closeTimeout);\n      }\n\n      if (config.duration !== 0) {\n        var duration = config.duration > 0 ? config.duration : 1500;\n        this.closeTimeout = setTimeout(this.closeToast.bind(this, 'timeout'), duration);\n      }\n\n      _reactNative.Animated.timing(this.state.fadeAnim, {\n        toValue: 1,\n        duration: 200\n      }).start();\n    }\n  }, {\n    key: \"closeModal\",\n    value: function closeModal(reason) {\n      this.setState({\n        modalVisible: false\n      });\n      var onClose = this.state.onClose;\n\n      if (onClose && typeof onClose === \"function\") {\n        onClose(reason);\n      }\n    }\n  }, {\n    key: \"closeToast\",\n    value: function closeToast(reason) {\n      clearTimeout(this.closeTimeout);\n\n      _reactNative.Animated.timing(this.state.fadeAnim, {\n        toValue: 0,\n        duration: 200\n      }).start(this.closeModal.bind(this, reason));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.modalVisible) {\n        return _react2.default.createElement(_reactNative.Animated.View, {\n          style: this.getToastStyle(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          }\n        }, _react2.default.createElement(_Toast.Toast, {\n          style: this.state.style,\n          danger: this.state.type == \"danger\" ? true : false,\n          success: this.state.type == \"success\" ? true : false,\n          warning: this.state.type == \"warning\" ? true : false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          }\n        }, _react2.default.createElement(_Text.Text, {\n          style: this.state.textStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          }\n        }, this.state.text), this.state.buttonText && _react2.default.createElement(_Button.Button, {\n          style: this.state.buttonStyle,\n          onPress: function onPress() {\n            return _this2.closeToast('user');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          }\n        }, _react2.default.createElement(_Text.Text, {\n          style: this.state.buttonTextStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          }\n        }, this.state.buttonText))));\n      } else return null;\n    }\n  }], [{\n    key: \"show\",\n    value: function show(_ref2) {\n      var config = _objectWithoutProperties(_ref2, []);\n\n      this.toastInstance._root.showToast({\n        config: config\n      });\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      if (this.toastInstance._root.getModalState()) {\n        this.toastInstance._root.closeToast(\"functionCall\");\n      }\n    }\n  }]);\n\n  return ToastContainer;\n}(_react.Component);\n\nToastContainer.propTypes = _extends({}, _reactNative.ViewPropTypes, {\n  style: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.number, _propTypes2.default.array])\n});\nvar StyledToastContainer = (0, _nativeBaseShoutemTheme.connectStyle)(\"NativeBase.ToastContainer\", {}, _mapPropsToStyleNames2.default)(ToastContainer);\nexports.ToastContainer = StyledToastContainer;","map":{"version":3,"sources":["../../../src/basic/ToastContainer.js"],"names":["ToastContainer","Component","modalVisible","fadeAnim","Animated","config","position","opacity","width","elevation","paddingHorizontal","Platform","top","bottom","buttonText","text","type","supportedOrientations","style","buttonTextStyle","buttonStyle","textStyle","onClose","clearTimeout","duration","setTimeout","toValue","reason","ViewPropTypes","PropTypes","StyledToastContainer","mapPropsToStyleNames"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { View, Modal, Platform, Animated, ViewPropTypes } from \"react-native\";\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport { Text } from \"./Text\";\nimport { Button } from \"./Button\";\nimport { ViewNB } from \"./View\";\nimport { Toast } from \"./Toast\";\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\n\nclass ToastContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalVisible: false,\n      fadeAnim: new Animated.Value(0)\n    };\n  }\n  static toastInstance;\n  static show({ ...config }) {\n    this.toastInstance._root.showToast({ config });\n  }\n  static hide() {\n    if (this.toastInstance._root.getModalState()) {\n      this.toastInstance._root.closeToast(\"functionCall\");\n    }\n  }\n  getToastStyle() {\n    return {\n      position: \"absolute\",\n      opacity: this.state.fadeAnim,\n      width: \"100%\",\n      elevation: 9,\n      paddingHorizontal: Platform.OS === \"ios\" ? 20 : 0,\n      top: this.state.position === \"top\" ? this.getTop() : undefined,\n      bottom: this.state.position === \"bottom\" ? this.getTop() : undefined\n    };\n  }\n  getTop() {\n    if (Platform.OS === \"ios\") {\n      return 30;\n    } else {\n      return 0;\n    }\n  }\n  getButtonText(buttonText) {\n    if (buttonText) {\n      if (buttonText.trim().length === 0) {\n        return undefined;\n      } else return buttonText;\n    }\n    return undefined;\n  }\n  getModalState() {\n    return this.state.modalVisible;\n  }\n  showToast({ config }) {\n    this.setState({\n      modalVisible: true,\n      text: config.text,\n      buttonText: this.getButtonText(config.buttonText),\n      type: config.type,\n      position: config.position ? config.position : \"bottom\",\n      supportedOrientations: config.supportedOrientations,\n      style: config.style,\n      buttonTextStyle: config.buttonTextStyle,\n      buttonStyle: config.buttonStyle,\n      textStyle: config.textStyle,\n      onClose: config.onClose\n    });\n    // If we have a toast already open, cut off its close timeout so that it won't affect *this* toast.\n    if (this.closeTimeout) {\n      clearTimeout(this.closeTimeout)\n    }\n    // Set the toast to close after the duration.\n    if (config.duration !== 0) {\n      const duration = (config.duration > 0) ? config.duration : 1500;\n      this.closeTimeout = setTimeout(this.closeToast.bind(this, 'timeout'), duration);\n    }\n    // Fade the toast in now.\n    Animated.timing(this.state.fadeAnim, {\n      toValue: 1,\n      duration: 200\n    }).start();\n  }\n  closeModal(reason) {\n    this.setState({\n      modalVisible: false\n    });\n    const { onClose } = this.state;\n    if (onClose && typeof onClose === \"function\") {\n      onClose(reason);\n    }\n  }\n  closeToast(reason) {\n    clearTimeout(this.closeTimeout);\n    Animated.timing(this.state.fadeAnim, {\n      toValue: 0,\n      duration: 200\n    }).start(this.closeModal.bind(this, reason));\n  }\n  render() {\n    if (this.state.modalVisible) {\n      return (\n        <Animated.View style={this.getToastStyle()}>\n          <Toast\n            style={this.state.style}\n            danger={this.state.type == \"danger\" ? true : false}\n            success={this.state.type == \"success\" ? true : false}\n            warning={this.state.type == \"warning\" ? true : false}\n          >\n            <Text style={this.state.textStyle}>{this.state.text}</Text>\n            {this.state.buttonText && (\n              <Button\n                style={this.state.buttonStyle}\n                onPress={() => this.closeToast('user')}\n              >\n                <Text style={this.state.buttonTextStyle}>\n                  {this.state.buttonText}\n                </Text>\n              </Button>\n            )}\n          </Toast>\n        </Animated.View>\n      );\n    } else return null;\n  }\n}\n\nToastContainer.propTypes = {\n  ...ViewPropTypes,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array\n  ])\n};\n\nconst StyledToastContainer = connectStyle(\n  \"NativeBase.ToastContainer\",\n  {},\n  mapPropsToStyleNames\n)(ToastContainer);\n\nexport { StyledToastContainer as ToastContainer };\n"]},"metadata":{},"sourceType":"script"}