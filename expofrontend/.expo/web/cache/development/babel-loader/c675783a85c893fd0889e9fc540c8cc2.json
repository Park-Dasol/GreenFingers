{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SwipeRow = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _jsxFileName = \"src/basic/SwipeRow.js\";\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _nativeBaseShoutemTheme = require(\"native-base-shoutem-theme\");\n\nvar _Text = require(\"./Text\");\n\nvar _Left = require(\"./Left\");\n\nvar _Right = require(\"./Right\");\n\nvar _Body = require(\"./Body\");\n\nvar _ListItem = require(\"./ListItem\");\n\nvar _mapPropsToStyleNames = require(\"../utils/mapPropsToStyleNames\");\n\nvar _mapPropsToStyleNames2 = _interopRequireDefault(_mapPropsToStyleNames);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar PREVIEW_OPEN_DELAY = 700;\nvar PREVIEW_CLOSE_DELAY = 300;\n\nvar SwipeRow = function (_Component) {\n  _inherits(SwipeRow, _Component);\n\n  function SwipeRow(props) {\n    _classCallCheck(this, SwipeRow);\n\n    var _this = _possibleConstructorReturn(this, (SwipeRow.__proto__ || Object.getPrototypeOf(SwipeRow)).call(this, props));\n\n    _this.horizontalSwipeGestureBegan = false;\n    _this.swipeInitialX = null;\n    _this.parentScrollEnabled = true;\n    _this.ranPreview = false;\n    _this.state = {\n      dimensionsSet: false,\n      hiddenHeight: 0,\n      hiddenWidth: 0\n    };\n    _this._translateX = new _reactNative.Animated.Value(0);\n    return _this;\n  }\n\n  _createClass(SwipeRow, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      this._panResponder = _reactNative.PanResponder.create({\n        onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(e, gs) {\n          return _this2.handleOnMoveShouldSetPanResponder(e, gs);\n        },\n        onPanResponderMove: function onPanResponderMove(e, gs) {\n          return _this2.handlePanResponderMove(e, gs);\n        },\n        onPanResponderRelease: function onPanResponderRelease(e, gs) {\n          return _this2.handlePanResponderEnd(e, gs);\n        },\n        onPanResponderTerminate: function onPanResponderTerminate(e, gs) {\n          return _this2.handlePanResponderEnd(e, gs);\n        },\n        onShouldBlockNativeResponder: function onShouldBlockNativeResponder(_) {\n          return false;\n        }\n      });\n    }\n  }, {\n    key: \"getPreviewAnimation\",\n    value: function getPreviewAnimation(toValue, delay) {\n      return _reactNative.Animated.timing(this._translateX, {\n        duration: this.props.previewDuration,\n        toValue: toValue,\n        delay: delay\n      });\n    }\n  }, {\n    key: \"onContentLayout\",\n    value: function onContentLayout(e) {\n      var _this3 = this;\n\n      this.setState({\n        dimensionsSet: !this.props.recalculateHiddenLayout,\n        hiddenHeight: e.nativeEvent.layout.height,\n        hiddenWidth: e.nativeEvent.layout.width\n      });\n\n      if (this.props.preview && !this.ranPreview) {\n        this.ranPreview = true;\n        var previewOpenValue = this.props.previewOpenValue || this.props.rightOpenValue * 0.5;\n        this.getPreviewAnimation(previewOpenValue, PREVIEW_OPEN_DELAY).start(function (_) {\n          _this3.getPreviewAnimation(0, PREVIEW_CLOSE_DELAY).start();\n        });\n      }\n    }\n  }, {\n    key: \"handleOnMoveShouldSetPanResponder\",\n    value: function handleOnMoveShouldSetPanResponder(e, gs) {\n      var dx = gs.dx;\n      return Math.abs(dx) > this.props.directionalDistanceChangeThreshold;\n    }\n  }, {\n    key: \"handlePanResponderMove\",\n    value: function handlePanResponderMove(e, gestureState) {\n      var dx = gestureState.dx,\n          dy = gestureState.dy;\n      var absDx = Math.abs(dx);\n      var absDy = Math.abs(dy);\n\n      if (absDx > this.props.directionalDistanceChangeThreshold || absDy > this.props.directionalDistanceChangeThreshold) {\n        if (absDy > absDx && !this.horizontalSwipeGestureBegan) {\n          return;\n        }\n\n        if (this.parentScrollEnabled) {\n          this.parentScrollEnabled = false;\n          this.props.setScrollEnabled && this.props.setScrollEnabled(false);\n        }\n\n        if (this.swipeInitialX === null) {\n          this.swipeInitialX = this._translateX._value;\n        }\n\n        if (!this.horizontalSwipeGestureBegan) {\n          this.horizontalSwipeGestureBegan = true;\n          this.props.swipeGestureBegan && this.props.swipeGestureBegan();\n        }\n\n        var newDX = this.swipeInitialX + dx;\n\n        if (this.props.disableLeftSwipe && newDX < 0) {\n          newDX = 0;\n        }\n\n        if (this.props.disableRightSwipe && newDX > 0) {\n          newDX = 0;\n        }\n\n        if (this.props.stopLeftSwipe && newDX > this.props.stopLeftSwipe) {\n          newDX = this.props.stopLeftSwipe;\n        }\n\n        if (this.props.stopRightSwipe && newDX < this.props.stopRightSwipe) {\n          newDX = this.props.stopRightSwipe;\n        }\n\n        this._translateX.setValue(newDX);\n      }\n    }\n  }, {\n    key: \"handlePanResponderEnd\",\n    value: function handlePanResponderEnd(e, gestureState) {\n      if (!this.parentScrollEnabled) {\n        this.parentScrollEnabled = true;\n        this.props.setScrollEnabled && this.props.setScrollEnabled(true);\n      }\n\n      var toValue = 0;\n\n      if (this._translateX._value >= 0) {\n        if (this._translateX._value > this.props.leftOpenValue * (this.props.swipeToOpenPercent / 100)) {\n          toValue = this.props.leftOpenValue;\n        }\n      } else {\n        if (this._translateX._value < this.props.rightOpenValue * (this.props.swipeToOpenPercent / 100)) {\n          toValue = this.props.rightOpenValue;\n        }\n      }\n\n      this.manuallySwipeRow(toValue);\n    }\n  }, {\n    key: \"closeRow\",\n    value: function closeRow() {\n      this.manuallySwipeRow(0);\n    }\n  }, {\n    key: \"openLeftRow\",\n    value: function openLeftRow() {\n      this.manuallySwipeRow(this.props.leftOpenValue);\n    }\n  }, {\n    key: \"openRightRow\",\n    value: function openRightRow() {\n      this.manuallySwipeRow(this.props.rightOpenValue);\n    }\n  }, {\n    key: \"manuallySwipeRow\",\n    value: function manuallySwipeRow(toValue) {\n      var _this4 = this;\n\n      _reactNative.Animated.spring(this._translateX, {\n        toValue: toValue,\n        friction: this.props.friction,\n        tension: this.props.tension\n      }).start(function (_) {\n        if (toValue === 0) {\n          _this4.props.onRowDidClose && _this4.props.onRowDidClose();\n        } else {\n          _this4.props.onRowDidOpen && _this4.props.onRowDidOpen();\n        }\n      });\n\n      if (toValue === 0) {\n        this.props.onRowClose && this.props.onRowClose();\n      } else {\n        this.props.onRowOpen && this.props.onRowOpen(toValue);\n      }\n\n      this.swipeInitialX = null;\n      this.horizontalSwipeGestureBegan = false;\n    }\n  }, {\n    key: \"renderMainContent\",\n    value: function renderMainContent() {\n      var _this5 = this;\n\n      if (this.state.dimensionsSet) {\n        return _react2.default.createElement(_reactNative.Animated.View, _extends({}, this._panResponder.panHandlers, {\n          style: {\n            transform: [{\n              translateX: this._translateX\n            }],\n            zIndex: 2\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          }\n        }), !this.props.list ? _react2.default.createElement(_ListItem.ListItem, {\n          list: true,\n          style: this.props.style,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          }\n        }, this.props.body) : _react2.default.createElement(_reactNative.View, {\n          style: [{\n            backgroundColor: '#FFF'\n          }, this.props.style],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          }\n        }, this.props.body));\n      } else {\n        return _react2.default.createElement(_reactNative.Animated.View, _extends({}, this._panResponder.panHandlers, {\n          onLayout: function onLayout(e) {\n            return _this5.onContentLayout(e);\n          },\n          style: {\n            transform: [{\n              translateX: this._translateX\n            }],\n            zIndex: 2\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          }\n        }), !this.props.list ? _react2.default.createElement(_ListItem.ListItem, {\n          list: true,\n          style: this.props.style,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          }\n        }, this.props.body) : _react2.default.createElement(_reactNative.View, {\n          style: [{\n            backgroundColor: '#FFF'\n          }, this.props.style],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          }\n        }, this.props.body));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react2.default.createElement(_reactNative.View, {\n        style: this.props.style ? this.props.style : undefined,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        }\n      }, _react2.default.createElement(_reactNative.View, {\n        style: [styles.hidden, {\n          height: this.state.hiddenHeight,\n          flex: 1,\n          flexDirection: \"row\",\n          justifyContent: \"space-between\"\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        }\n      }, _react2.default.createElement(_Left.Left, {\n        style: {\n          width: this.props.leftOpenValue,\n          zIndex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        }\n      }, this.props.left), _react2.default.createElement(_Body.Body, {\n        style: {\n          flex: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        }\n      }), _react2.default.createElement(_Right.Right, {\n        style: {\n          width: -this.props.rightOpenValue,\n          zIndex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        }\n      }, this.props.right)), this.renderMainContent());\n    }\n  }]);\n\n  return SwipeRow;\n}(_react.Component);\n\nSwipeRow.defaultProps = {\n  leftOpenValue: 0,\n  rightOpenValue: 0,\n  closeOnRowPress: true,\n  disableLeftSwipe: false,\n  disableRightSwipe: false,\n  recalculateHiddenLayout: false,\n  preview: false,\n  previewDuration: 300,\n  directionalDistanceChangeThreshold: 2,\n  swipeToOpenPercent: 50\n};\nvar styles = {\n  container: {},\n  hidden: {\n    bottom: 0,\n    left: 0,\n    overflow: \"hidden\",\n    position: \"absolute\",\n    right: 0,\n    top: 0\n  }\n};\nvar StyledSwipeRow = (0, _nativeBaseShoutemTheme.connectStyle)(\"NativeBase.SwipeRow\", {}, _mapPropsToStyleNames2.default)(SwipeRow);\nexports.SwipeRow = StyledSwipeRow;","map":{"version":3,"sources":["../../../src/basic/SwipeRow.js"],"names":["PREVIEW_OPEN_DELAY","PREVIEW_CLOSE_DELAY","SwipeRow","Component","defaultProps","leftOpenValue","rightOpenValue","closeOnRowPress","disableLeftSwipe","disableRightSwipe","recalculateHiddenLayout","preview","previewDuration","directionalDistanceChangeThreshold","swipeToOpenPercent","dimensionsSet","hiddenHeight","hiddenWidth","Animated","PanResponder","onMoveShouldSetPanResponder","onPanResponderMove","onPanResponderRelease","onPanResponderTerminate","onShouldBlockNativeResponder","toValue","delay","duration","e","previewOpenValue","gs","dx","Math","gestureState","dy","absDx","absDy","newDX","friction","tension","transform","translateX","zIndex","backgroundColor","styles","height","flex","flexDirection","justifyContent","width","container","hidden","bottom","left","overflow","position","right","top","StyledSwipeRow","mapPropsToStyleNames"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Animated, PanResponder, Platform, StyleSheet, TouchableOpacity, View } from \"react-native\";\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport { Text } from \"./Text\";\nimport { Left } from \"./Left\";\nimport { Right } from \"./Right\";\nimport { Body } from \"./Body\";\nimport { ListItem } from \"./ListItem\";\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\n\nconst PREVIEW_OPEN_DELAY = 700;\nconst PREVIEW_CLOSE_DELAY = 300;\n\nclass SwipeRow extends Component {\n  static defaultProps = {\n    leftOpenValue: 0,\n    rightOpenValue: 0,\n    closeOnRowPress: true,\n    disableLeftSwipe: false,\n    disableRightSwipe: false,\n    recalculateHiddenLayout: false,\n    preview: false,\n    previewDuration: 300,\n    directionalDistanceChangeThreshold: 2,\n    swipeToOpenPercent: 50,\n  };\n  constructor(props) {\n    super(props);\n    this.horizontalSwipeGestureBegan = false;\n    this.swipeInitialX = null;\n    this.parentScrollEnabled = true;\n    this.ranPreview = false;\n    this.state = {\n      dimensionsSet: false,\n      hiddenHeight: 0,\n      hiddenWidth: 0,\n    };\n    this._translateX = new Animated.Value(0);\n  }\n\n  componentWillMount() {\n    this._panResponder = PanResponder.create({\n      onMoveShouldSetPanResponder: (e, gs) => this.handleOnMoveShouldSetPanResponder(e, gs),\n      onPanResponderMove: (e, gs) => this.handlePanResponderMove(e, gs),\n      onPanResponderRelease: (e, gs) => this.handlePanResponderEnd(e, gs),\n      onPanResponderTerminate: (e, gs) => this.handlePanResponderEnd(e, gs),\n      onShouldBlockNativeResponder: _ => false,\n    });\n  }\n\n  getPreviewAnimation(toValue, delay) {\n    return Animated.timing(this._translateX, { duration: this.props.previewDuration, toValue, delay });\n  }\n\n  onContentLayout(e) {\n    this.setState({\n      dimensionsSet: !this.props.recalculateHiddenLayout,\n      hiddenHeight: e.nativeEvent.layout.height,\n      hiddenWidth: e.nativeEvent.layout.width,\n    });\n\n    if (this.props.preview && !this.ranPreview) {\n      this.ranPreview = true;\n      let previewOpenValue = this.props.previewOpenValue || this.props.rightOpenValue * 0.5;\n      this.getPreviewAnimation(previewOpenValue, PREVIEW_OPEN_DELAY).start(_ => {\n        this.getPreviewAnimation(0, PREVIEW_CLOSE_DELAY).start();\n      });\n    }\n  }\n\n  handleOnMoveShouldSetPanResponder(e, gs) {\n    const { dx } = gs;\n    return Math.abs(dx) > this.props.directionalDistanceChangeThreshold;\n  }\n\n  handlePanResponderMove(e, gestureState) {\n    const { dx, dy } = gestureState;\n    const absDx = Math.abs(dx);\n    const absDy = Math.abs(dy);\n\n\t\t// this check may not be necessary because we don't capture the move until we pass the threshold\n\t\t// just being extra safe here\n    if (\n\t\t\tabsDx > this.props.directionalDistanceChangeThreshold ||\n\t\t\tabsDy > this.props.directionalDistanceChangeThreshold\n\t\t) {\n\t\t\t// we have enough to determine direction\n      if (absDy > absDx && !this.horizontalSwipeGestureBegan) {\n\t\t\t\t// user is moving vertically, do nothing, listView will handle\n        return;\n      }\n\n\t\t\t// user is moving horizontally\n      if (this.parentScrollEnabled) {\n\t\t\t\t// disable scrolling on the listView parent\n        this.parentScrollEnabled = false;\n        this.props.setScrollEnabled && this.props.setScrollEnabled(false);\n      }\n\n      if (this.swipeInitialX === null) {\n\t\t\t\t// set tranlateX value when user started swiping\n        this.swipeInitialX = this._translateX._value;\n      }\n      if (!this.horizontalSwipeGestureBegan) {\n        this.horizontalSwipeGestureBegan = true;\n        this.props.swipeGestureBegan && this.props.swipeGestureBegan();\n      }\n\n      let newDX = this.swipeInitialX + dx;\n      if (this.props.disableLeftSwipe && newDX < 0) {\n        newDX = 0;\n      }\n      if (this.props.disableRightSwipe && newDX > 0) {\n        newDX = 0;\n      }\n\n      if (this.props.stopLeftSwipe && newDX > this.props.stopLeftSwipe) {\n        newDX = this.props.stopLeftSwipe;\n      }\n      if (this.props.stopRightSwipe && newDX < this.props.stopRightSwipe) {\n        newDX = this.props.stopRightSwipe;\n      }\n\n      this._translateX.setValue(newDX);\n    }\n  }\n\n  handlePanResponderEnd(e, gestureState) {\n\t\t// re-enable scrolling on listView parent\n    if (!this.parentScrollEnabled) {\n      this.parentScrollEnabled = true;\n      this.props.setScrollEnabled && this.props.setScrollEnabled(true);\n    }\n\n\t\t// finish up the animation\n    let toValue = 0;\n    if (this._translateX._value >= 0) {\n\t\t\t// trying to open right\n      if (this._translateX._value > this.props.leftOpenValue * (this.props.swipeToOpenPercent / 100)) {\n\t\t\t\t// we're more than halfway\n        toValue = this.props.leftOpenValue;\n      }\n    } else {\n\t\t\t// trying to open left\n      if (this._translateX._value < this.props.rightOpenValue * (this.props.swipeToOpenPercent / 100)) {\n\t\t\t\t// we're more than halfway\n        toValue = this.props.rightOpenValue;\n      }\n    }\n\n    this.manuallySwipeRow(toValue);\n  }\n\n\t/*\n\t * This method is called by SwipeListView\n\t */\n  closeRow() {\n    this.manuallySwipeRow(0);\n  }\n\n\topenLeftRow() {\n\t\tthis.manuallySwipeRow(this.props.leftOpenValue);\n\t}\n\n\topenRightRow() {\n\t\tthis.manuallySwipeRow(this.props.rightOpenValue);\n\t}\n\n\tmanuallySwipeRow(toValue) {\n\t\tAnimated.spring(this._translateX, {\n\t\t\ttoValue,\n\t\t\tfriction: this.props.friction,\n\t\t\ttension: this.props.tension,\n\t\t}).start(_ => {\n\t\t\tif (toValue === 0) {\n\t\t\t\tthis.props.onRowDidClose && this.props.onRowDidClose();\n\t\t\t} else {\n\t\t\t\tthis.props.onRowDidOpen && this.props.onRowDidOpen();\n\t\t\t}\n\t\t});\n\n    if (toValue === 0) {\n      this.props.onRowClose && this.props.onRowClose();\n    } else {\n      this.props.onRowOpen && this.props.onRowOpen(toValue);\n    }\n\n\t\t// reset everything\n    this.swipeInitialX = null;\n    this.horizontalSwipeGestureBegan = false;\n  }\n\n  renderMainContent() {\n\t\t// We do this annoying if statement for performance.\n\t\t// We don't want the onLayout func to run after it runs once.\n    if (this.state.dimensionsSet) {\n      return (\n\t\t\t\t<Animated.View\n\t\t\t\t\t{...this._panResponder.panHandlers}\n\t\t\t\t\tstyle={{\n  transform: [{ translateX: this._translateX }],\n  zIndex: 2,\n}}\n\t\t\t\t>\n\t\t\t\t\t{!this.props.list\n\t\t\t\t\t\t? <ListItem list style={this.props.style}>\n\t\t\t\t\t\t\t\t{this.props.body}\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t: <View style={[{ backgroundColor: '#FFF' },this.props.style]}>\n\t\t\t\t\t\t\t\t{this.props.body}\n\t\t\t\t\t\t\t</View>}\n\t\t\t\t</Animated.View>\n      );\n    } else {\n      return (\n\t\t\t\t<Animated.View\n\t\t\t\t\t{...this._panResponder.panHandlers}\n\t\t\t\t\tonLayout={e => this.onContentLayout(e)}\n\t\t\t\t\tstyle={{\n  transform: [{ translateX: this._translateX }],\n  zIndex: 2,\n}}\n\t\t\t\t>\n\t\t\t\t\t{!this.props.list\n\t\t\t\t\t\t? <ListItem list style={this.props.style}>\n\t\t\t\t\t\t\t\t{this.props.body}\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t: <View style={[{ backgroundColor: '#FFF' },this.props.style]}>\n\t\t\t\t\t\t\t\t{this.props.body}\n\t\t\t\t\t\t\t</View>}\n\t\t\t\t</Animated.View>\n      );\n    }\n  }\n\n  render() {\n    return (\n\t\t\t<View style={this.props.style ? this.props.style : undefined}>\n\t\t\t\t<View\n\t\t\t\t\tstyle={[\n  styles.hidden,\n  {\n    height: this.state.hiddenHeight,\n    flex:1,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n]}\n\t\t\t\t>\n\t\t\t\t\t<Left style={{ width: this.props.leftOpenValue, zIndex: 1 }}>\n\t\t\t\t\t\t{this.props.left}\n\t\t\t\t\t</Left>\n\t\t\t\t\t<Body style={{ flex: 0 }} />\n\t\t\t\t\t<Right style={{ width: -this.props.rightOpenValue, zIndex: 1 }}>\n\t\t\t\t\t\t{this.props.right}\n\t\t\t\t\t</Right>\n\t\t\t\t</View>\n\t\t\t\t{this.renderMainContent()}\n\t\t\t</View>\n    );\n  }\n}\n\nconst styles = {\n  container: {\n\t\t// As of RN 0.29 flex: 1 is causing all rows to be the same height\n\t\t// flex: 1\n  },\n  hidden: {\n    bottom: 0,\n    left: 0,\n    overflow: \"hidden\",\n    position: \"absolute\",\n    right: 0,\n    top: 0,\n  },\n};\n\nconst StyledSwipeRow = connectStyle(\"NativeBase.SwipeRow\", {}, mapPropsToStyleNames)(SwipeRow);\nexport { StyledSwipeRow as SwipeRow };\n"]},"metadata":{},"sourceType":"script"}