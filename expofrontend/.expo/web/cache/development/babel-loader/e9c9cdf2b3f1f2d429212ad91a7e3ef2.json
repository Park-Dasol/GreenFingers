{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Header = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _jsxFileName = \"src/basic/Header.js\";\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _nativeBaseShoutemTheme = require(\"native-base-shoutem-theme\");\n\nvar _mapPropsToStyleNames = require(\"../utils/mapPropsToStyleNames\");\n\nvar _mapPropsToStyleNames2 = _interopRequireDefault(_mapPropsToStyleNames);\n\nvar _platform = require(\"../theme/variables/platform\");\n\nvar _platform2 = _interopRequireDefault(_platform);\n\nvar _lodash = require(\"lodash\");\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Header = function (_Component) {\n  _inherits(Header, _Component);\n\n  function Header(props) {\n    _classCallCheck(this, Header);\n\n    var _this = _possibleConstructorReturn(this, (Header.__proto__ || Object.getPrototypeOf(Header)).call(this, props));\n\n    _this.state = {\n      orientation: \"portrait\"\n    };\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"layoutChange\",\n    value: function layoutChange(val) {\n      var maxComp = Math.max(_platform2.default.deviceWidth, _platform2.default.deviceHeight);\n      if (val.width >= maxComp) this.setState({\n        orientation: \"landscape\"\n      });else {\n        this.setState({\n          orientation: \"portrait\"\n        });\n      }\n    }\n  }, {\n    key: \"calculateHeight\",\n    value: function calculateHeight(mode, inSet) {\n      var inset = null;\n\n      if (inSet != undefined) {\n        inset = inSet;\n      } else {\n        inset = _platform2.default.Inset;\n      }\n\n      var InsetValues = mode === \"portrait\" ? inset.portrait : inset.landscape;\n      var oldHeight = null;\n\n      if (this.props.style.height != undefined) {\n        oldHeight = this.props.style.height;\n      } else if (this.props.style[1]) {\n        oldHeight = this.props.style[1].height ? this.props.style[1].height : this.props.style[0].height;\n      } else {\n        oldHeight = this.props.style[0].height;\n      }\n\n      var height = oldHeight + InsetValues.topInset;\n      return height;\n    }\n  }, {\n    key: \"calculatePadder\",\n    value: function calculatePadder(mode, inSet) {\n      var inset = null;\n\n      if (inSet != undefined) {\n        inset = inSet;\n      } else {\n        inset = _platform2.default.Inset;\n      }\n\n      var InsetValues = mode === \"portrait\" ? inset.portrait : inset.landscape;\n      var topPadder = null;\n\n      var style = _reactNative.StyleSheet.flatten(this.props.style);\n\n      if (style.padding !== undefined || style.paddingTop !== undefined) {\n        topPadder = (style.paddingTop ? style.paddingTop : style.padding) + InsetValues.topInset;\n      } else {\n        topPadder = InsetValues.topInset;\n      }\n\n      return topPadder;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var variables = this.context.theme ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables : _platform2.default;\n      var platformStyle = variables.platformStyle;\n      return _react2.default.createElement(_reactNative.View, {\n        onLayout: function onLayout(e) {\n          return _this2.layoutChange(e.nativeEvent.layout);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        }\n      }, _react2.default.createElement(_reactNative.StatusBar, {\n        backgroundColor: this.props.androidStatusBarColor ? this.props.androidStatusBarColor : variables.statusBarColor,\n        barStyle: this.props.iosBarStyle ? this.props.iosBarStyle : platformStyle === \"material\" ? \"light-content\" : variables.iosStatusbar,\n        translucent: this.props.transparent ? true : this.props.translucent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        }\n      }), _platform2.default.isIphoneX ? _react2.default.createElement(_reactNative.View, _extends({\n        ref: function ref(c) {\n          return _this2._root = c;\n        }\n      }, this.props, {\n        style: [this.props.style, {\n          height: this.calculateHeight(this.state.orientation, variables.Inset),\n          paddingTop: this.calculatePadder(this.state.orientation, variables.Inset)\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        }\n      })) : _react2.default.createElement(_reactNative.View, _extends({\n        ref: function ref(c) {\n          return _this2._root = c;\n        }\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        }\n      })));\n    }\n  }]);\n\n  return Header;\n}(_react.Component);\n\nHeader.contextTypes = {\n  theme: _propTypes2.default.object\n};\nHeader.propTypes = _extends({}, _reactNative.ViewPropTypes, {\n  style: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.number, _propTypes2.default.array]),\n  searchBar: _propTypes2.default.bool,\n  rounded: _propTypes2.default.bool\n});\nvar StyledHeader = (0, _nativeBaseShoutemTheme.connectStyle)(\"NativeBase.Header\", {}, _mapPropsToStyleNames2.default)(Header);\nexports.Header = StyledHeader;","map":{"version":3,"sources":["../../../src/basic/Header.js"],"names":["Header","Component","contextTypes","theme","PropTypes","orientation","val","maxComp","Math","variable","mode","inSet","inset","InsetValues","oldHeight","height","topPadder","style","StyleSheet","variables","platformStyle","e","paddingTop","ViewPropTypes","searchBar","rounded","StyledHeader","mapPropsToStyleNames"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { View, StatusBar, ViewPropTypes, StyleSheet } from \"react-native\";\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\nimport variable from \"../theme/variables/platform\";\nimport _ from \"lodash\";\nclass Header extends Component {\n  static contextTypes = {\n    theme: PropTypes.object\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      orientation: \"portrait\"\n    };\n  }\n  layoutChange(val) {\n    let maxComp = Math.max(variable.deviceWidth, variable.deviceHeight);\n    if (val.width >= maxComp) this.setState({ orientation: \"landscape\" });\n    else {\n      this.setState({ orientation: \"portrait\" });\n    }\n  }\n  calculateHeight(mode, inSet) {\n    let inset = null;\n    if (inSet != undefined) {\n      inset = inSet;\n    } else {\n      inset = variable.Inset;\n    }\n    const InsetValues = mode === \"portrait\" ? inset.portrait : inset.landscape;\n    let oldHeight = null;\n    if (this.props.style.height != undefined) {\n      oldHeight = this.props.style.height;\n    } else if (this.props.style[1]) {\n      oldHeight = this.props.style[1].height ? this.props.style[1].height : this.props.style[0].height;\n    } else {\n      oldHeight = this.props.style[0].height;\n    }\n    let height = oldHeight + InsetValues.topInset;\n    return height;\n  }\n  calculatePadder(mode, inSet) {\n    let inset = null;\n    if (inSet != undefined) {\n      inset = inSet;\n    } else {\n      inset = variable.Inset;\n    }\n    const InsetValues = mode === \"portrait\" ? inset.portrait : inset.landscape;\n    let topPadder = null;\n    let style = StyleSheet.flatten(this.props.style);\n    if (style.padding !== undefined || style.paddingTop !== undefined) {\n      topPadder = (style.paddingTop ? style.paddingTop : style.padding) + InsetValues.topInset;\n    } else {\n      topPadder = InsetValues.topInset;\n    }\n    return topPadder;\n  }\n  render() {\n    const variables = this.context.theme\n      ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables\n      : variable;\n    const platformStyle = variables.platformStyle;\n    return (\n      <View onLayout={e => this.layoutChange(e.nativeEvent.layout)}>\n        <StatusBar\n          backgroundColor={\n            this.props.androidStatusBarColor\n              ? this.props.androidStatusBarColor\n              : variables.statusBarColor\n          }\n          barStyle={\n            this.props.iosBarStyle\n              ? this.props.iosBarStyle\n              : platformStyle === \"material\"\n                ? \"light-content\"\n                : variables.iosStatusbar\n          }\n          translucent={this.props.transparent ? true : this.props.translucent}\n        />\n        {variable.isIphoneX ? (\n          <View\n            ref={c => (this._root = c)}\n            {...this.props}\n            style={[\n              this.props.style,\n              {\n                height: this.calculateHeight(\n                  this.state.orientation,\n                  variables.Inset\n                ),\n                paddingTop: this.calculatePadder(\n                  this.state.orientation,\n                  variables.Inset\n                )\n              }\n            ]}\n          />\n        ) : (\n            <View ref={c => (this._root = c)} {...this.props} />\n          )}\n      </View>\n    );\n  }\n}\n\nHeader.propTypes = {\n  ...ViewPropTypes,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array\n  ]),\n  searchBar: PropTypes.bool,\n  rounded: PropTypes.bool\n};\n\nconst StyledHeader = connectStyle(\n  \"NativeBase.Header\",\n  {},\n  mapPropsToStyleNames\n)(Header);\nexport { StyledHeader as Header };"]},"metadata":{},"sourceType":"script"}