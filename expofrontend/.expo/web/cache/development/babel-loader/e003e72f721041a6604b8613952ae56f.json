{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DefaultTabBar = undefined;\nvar _jsxFileName = \"src/basic/Tabs/DefaultTabBar.js\";\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _createReactClass = require(\"create-react-class\");\n\nvar _createReactClass2 = _interopRequireDefault(_createReactClass);\n\nvar _lodash = require(\"lodash\");\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _nativeBaseShoutemTheme = require(\"native-base-shoutem-theme\");\n\nvar _mapPropsToStyleNames = require(\"../../utils/mapPropsToStyleNames\");\n\nvar _mapPropsToStyleNames2 = _interopRequireDefault(_mapPropsToStyleNames);\n\nvar _platform = require(\"./../../theme/variables/platform\");\n\nvar _platform2 = _interopRequireDefault(_platform);\n\nvar _TabHeading = require(\"../TabHeading\");\n\nvar _Text = require(\"../Text\");\n\nvar _TabContainer = require(\"../TabContainer\");\n\nvar _utils = require(\"../../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar ReactNative = require(\"react-native-web/dist/index\");\n\nvar StyleSheet = ReactNative.StyleSheet,\n    View = ReactNative.View,\n    Animated = ReactNative.Animated,\n    Platform = ReactNative.Platform;\n\nvar Button = require(\"./Button\");\n\nvar DefaultTabBar = (0, _createReactClass2.default)({\n  displayName: \"DefaultTabBar\",\n  propTypes: {\n    goToPage: _propTypes2.default.func,\n    activeTab: _propTypes2.default.number,\n    tabs: _propTypes2.default.array,\n    backgroundColor: _propTypes2.default.string,\n    activeTextColor: _propTypes2.default.string,\n    inactiveTextColor: _propTypes2.default.string,\n    tabStyle: _utils.ViewPropTypes.style,\n    renderTab: _propTypes2.default.func,\n    underlineStyle: _utils.ViewPropTypes.style,\n    tabContainerStyle: _utils.ViewPropTypes.style\n  },\n  contextTypes: {\n    theme: _propTypes2.default.object\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      activeTextColor: _platform2.default.topTabBarActiveTextColor,\n      inactiveTextColor: _platform2.default.topTabBarTextColor,\n      backgroundColor: null,\n      tabFontSize: _platform2.default.tabFontSize\n    };\n  },\n  renderTabOption: function renderTabOption(name, page) {},\n  renderTab: function renderTab(name, page, isTabActive, onPressHandler, tabStyle, activeTabStyle, textStyle, activeTextStyle, tabHeaderStyle, tabFontSize) {\n    var headerContent = typeof name !== \"string\" ? name.props.children : undefined;\n    var _props = this.props,\n        activeTextColor = _props.activeTextColor,\n        inactiveTextColor = _props.inactiveTextColor;\n    var textColor = isTabActive ? activeTextColor : inactiveTextColor;\n    var fontWeight = isTabActive ? \"bold\" : \"normal\";\n\n    if (typeof name === \"string\") {\n      return _react2.default.createElement(Button, {\n        style: {\n          flex: 1\n        },\n        key: name,\n        onPress: function onPress() {\n          return onPressHandler(page);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        }\n      }, _react2.default.createElement(_TabHeading.TabHeading, {\n        style: isTabActive ? activeTabStyle : tabStyle,\n        active: isTabActive,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        }\n      }, _react2.default.createElement(_Text.Text, {\n        style: [{\n          fontSize: tabFontSize\n        }, isTabActive ? activeTextStyle : textStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        }\n      }, name)));\n    } else {\n      return _react2.default.createElement(Button, {\n        style: {\n          flex: 1\n        },\n        key: _lodash2.default.random(1.2, 5.2),\n        onPress: function onPress() {\n          return onPressHandler(page);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        }\n      }, _react2.default.createElement(_TabHeading.TabHeading, {\n        style: tabHeaderStyle,\n        active: isTabActive,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        }\n      }, headerContent));\n    }\n  },\n  render: function render() {\n    var _this = this;\n\n    var variables = this.context.theme ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables : _platform2.default;\n    var platformStyle = variables.platformStyle;\n    var containerWidth = this.props.containerWidth;\n    var numberOfTabs = this.props.tabs.length;\n    var tabUnderlineStyle = {\n      position: \"absolute\",\n      width: containerWidth / numberOfTabs,\n      height: 4,\n      backgroundColor: variables.topTabBarActiveBorderColor,\n      bottom: 0\n    };\n    var left = this.props.scrollValue.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, containerWidth / numberOfTabs]\n    });\n    return _react2.default.createElement(_TabContainer.TabContainer, {\n      style: [{\n        backgroundColor: variables.tabDefaultBg\n      }, this.props.tabContainerStyle ? this.props.tabContainerStyle : {}],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      }\n    }, this.props.tabs.map(function (name, page) {\n      var isTabActive = _this.props.activeTab === page;\n      var renderTab = _this.props.renderTab || _this.renderTab;\n      return renderTab(name, page, isTabActive, _this.props.goToPage, _this.props.tabStyle[page], _this.props.activeTabStyle[page], _this.props.textStyle[page], _this.props.activeTextStyle[page], _this.props.tabHeaderStyle[page], variables.tabFontSize);\n    }), _react2.default.createElement(Animated.View, {\n      style: [tabUnderlineStyle, {\n        left: left\n      }, this.props.underlineStyle],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      }\n    }));\n  }\n});\nvar StyledTab = (0, _nativeBaseShoutemTheme.connectStyle)(\"NativeBase.DefaultTabBar\", {}, _mapPropsToStyleNames2.default)(DefaultTabBar);\nexports.DefaultTabBar = StyledTab;","map":{"version":3,"sources":["../../../../src/basic/Tabs/DefaultTabBar.js"],"names":["StyleSheet","View","Animated","Platform","ReactNative","Button","require","DefaultTabBar","propTypes","goToPage","PropTypes","activeTab","tabs","backgroundColor","activeTextColor","inactiveTextColor","tabStyle","ViewPropTypes","renderTab","underlineStyle","tabContainerStyle","contextTypes","theme","getDefaultProps","variable","tabFontSize","renderTabOption","headerContent","name","textColor","isTabActive","fontWeight","flex","onPressHandler","fontSize","_","render","variables","platformStyle","containerWidth","numberOfTabs","tabUnderlineStyle","position","width","height","bottom","left","inputRange","outputRange","StyledTab","mapPropsToStyleNames"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport createReactClass from \"create-react-class\";\nimport _ from \"lodash\";\nimport { connectStyle, StyleProvider } from \"native-base-shoutem-theme\";\nimport mapPropsToStyleNames from \"../../utils/mapPropsToStyleNames\";\nimport variable from \"./../../theme/variables/platform\";\nimport { TabHeading } from \"../TabHeading\";\nimport { Text } from \"../Text\";\nimport { TabContainer } from \"../TabContainer\";\nimport { ViewPropTypes } from \"../../utils\";\nconst ReactNative = require(\"react-native\");\n\nconst { StyleSheet, View, Animated, Platform } = ReactNative;\nconst Button = require(\"./Button\");\n\nconst DefaultTabBar = createReactClass({\n  propTypes: {\n    goToPage: PropTypes.func,\n    activeTab: PropTypes.number,\n    tabs: PropTypes.array,\n    backgroundColor: PropTypes.string,\n    activeTextColor: PropTypes.string,\n    inactiveTextColor: PropTypes.string,\n    tabStyle: ViewPropTypes.style,\n    renderTab: PropTypes.func,\n    underlineStyle: ViewPropTypes.style,\n    tabContainerStyle: ViewPropTypes.style\n  },\n  contextTypes: {\n    theme: PropTypes.object\n  },\n\n  getDefaultProps() {\n    return {\n      activeTextColor: variable.topTabBarActiveTextColor,\n      inactiveTextColor: variable.topTabBarTextColor,\n      backgroundColor: null,\n      tabFontSize: variable.tabFontSize\n    };\n  },\n\n  renderTabOption(name, page) {},\n\n  renderTab(\n    name,\n    page,\n    isTabActive,\n    onPressHandler,\n    tabStyle,\n    activeTabStyle,\n    textStyle,\n    activeTextStyle,\n    tabHeaderStyle,\n    tabFontSize\n  ) {\n    const headerContent =\n      typeof name !== \"string\" ? name.props.children : undefined;\n    const { activeTextColor, inactiveTextColor } = this.props;\n    const textColor = isTabActive ? activeTextColor : inactiveTextColor;\n    const fontWeight = isTabActive ? \"bold\" : \"normal\";\n    // const fontSize = tabFontSize;\n    if (typeof name === \"string\") {\n      return (\n        <Button\n          style={{ flex: 1 }}\n          key={name}\n          onPress={() => onPressHandler(page)}\n        >\n          <TabHeading\n            style={isTabActive ? activeTabStyle : tabStyle}\n            active={isTabActive}\n          >\n            <Text\n              style={[\n                { fontSize: tabFontSize },\n                isTabActive ? activeTextStyle : textStyle\n              ]}\n            >\n              {name}\n            </Text>\n          </TabHeading>\n        </Button>\n      );\n    } else {\n      return (\n        <Button\n          style={{ flex: 1 }}\n          key={_.random(1.2, 5.2)}\n          onPress={() => onPressHandler(page)}\n        >\n          <TabHeading style={tabHeaderStyle} active={isTabActive}>\n            {headerContent}\n          </TabHeading>\n        </Button>\n      );\n    }\n  },\n\n  render() {\n    const variables = this.context.theme\n      ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables\n      : variable;\n    const platformStyle = variables.platformStyle;\n    const containerWidth = this.props.containerWidth;\n    const numberOfTabs = this.props.tabs.length;\n    const tabUnderlineStyle = {\n      position: \"absolute\",\n      width: containerWidth / numberOfTabs,\n      height: 4,\n      backgroundColor: variables.topTabBarActiveBorderColor,\n      bottom: 0\n    };\n\n    const left = this.props.scrollValue.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, containerWidth / numberOfTabs]\n    });\n    return (\n      <TabContainer\n        style={[\n          { backgroundColor: variables.tabDefaultBg },\n          this.props.tabContainerStyle ? this.props.tabContainerStyle : {}\n        ]}\n      >\n        {this.props.tabs.map((name, page) => {\n          const isTabActive = this.props.activeTab === page;\n          const renderTab = this.props.renderTab || this.renderTab;\n          return renderTab(\n            name,\n            page,\n            isTabActive,\n            this.props.goToPage,\n            this.props.tabStyle[page],\n            this.props.activeTabStyle[page],\n            this.props.textStyle[page],\n            this.props.activeTextStyle[page],\n            this.props.tabHeaderStyle[page],\n            variables.tabFontSize\n          );\n        })}\n        <Animated.View\n          style={[tabUnderlineStyle, { left }, this.props.underlineStyle]}\n        />\n      </TabContainer>\n    );\n  }\n});\n\n// module.exports = DefaultTabBar;\nconst StyledTab = connectStyle(\n  \"NativeBase.DefaultTabBar\",\n  {},\n  mapPropsToStyleNames\n)(DefaultTabBar);\nexport { StyledTab as DefaultTabBar };\n"]},"metadata":{},"sourceType":"script"}