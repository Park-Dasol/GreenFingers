{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\multicampus\\\\Desktop\\\\s04p31c103\\\\frontend\\\\app\\\\App.js\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport \"react-native-gesture-handler\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { HomeScreen } from \"./screens/main/Home\";\nimport { LoginScreen } from \"./screens/auth/Login\";\nimport { SignupScreen } from \"./screens/auth/Signup\";\nimport { DiaryScreen } from \"./screens/diary/Diary\";\nimport { DiaryWriteScreen } from \"./screens/diary/DiaryWrite\";\nimport { RecommendationScreen } from \"./screens/recommendation/Recommendation\";\nimport { SurveyintroScreen } from \"./screens/recommendation/SurveyIntro\";\nimport { SurveyquestionScreen } from \"./screens/recommendation/SurveyQ\";\nimport { SurveyresultScreen } from \"./screens/recommendation/SurveyResult\";\nimport { RoomScreen } from \"./screens/main/Room\";\nimport { PlantDetail } from \"./screens/main/PlantDetail\";\nimport theme from \"./assets/theme/index\";\nimport { ThemeProvider } from \"styled-components\";\nimport { Icon } from \"native-base\";\nimport firebase from \"firebase/app\";\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n} else {\n  firebase.app();\n}\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyD91A1_T-nTAnoVRzyQErecdYrqiG3TFyI\",\n  authDomain: \"greenfingers-dbd68.firebaseapp.com\",\n  databaseURL: \"https://greenfingers-dbd68-default-rtdb.firebaseio.com\",\n  projectId: \"greenfingers-dbd68\",\n  storageBucket: \"greenfingers-dbd68.appspot.com\",\n  messagingSenderId: \"142725233287\",\n  appId: \"1:142725233287:android:15e062f54e21a186ad9622\"\n};\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar HomeStack = createStackNavigator();\nvar RecommendationStack = createStackNavigator();\n\nfunction HomeStacks() {\n  return React.createElement(HomeStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, React.createElement(HomeStack.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    options: {\n      header: function header() {\n        return null;\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), React.createElement(HomeStack.Screen, {\n    name: \"Room\",\n    component: RoomScreen,\n    options: {\n      header: function header() {\n        return null;\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), React.createElement(HomeStack.Screen, {\n    name: \"PlantDetail\",\n    component: PlantDetail,\n    options: {\n      header: function header() {\n        return null;\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction RecommendationStacks() {\n  return React.createElement(RecommendationStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, React.createElement(RecommendationStack.Screen, {\n    name: \"Surveyintro\",\n    component: SurveyintroScreen,\n    options: {\n      header: function header() {\n        return null;\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }), React.createElement(RecommendationStack.Screen, {\n    name: \"Surveyquestion\",\n    component: SurveyquestionScreen,\n    options: {\n      title: \"맞춤 식물 찾기\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }), React.createElement(RecommendationStack.Screen, {\n    name: \"Surveyresult\",\n    component: SurveyresultScreen,\n    options: {\n      title: \"맞춤 식물 찾기\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction DiaryStacks() {\n  return React.createElement(Stack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Diary\",\n    component: DiaryScreen,\n    options: {\n      headerStyle: {\n        backgroundColor: \"#F9F9F9\"\n      },\n      headerTintColor: \"#29582C\",\n      headerTitleStyle: {\n        fontWeight: \"bold\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"DiaryWrite\",\n    component: DiaryWriteScreen,\n    options: {\n      title: \"피드 작성\",\n      headerStyle: {\n        backgroundColor: \"#F9F9F9\"\n      },\n      headerTintColor: \"#29582C\",\n      headerTitleStyle: {\n        fontWeight: \"bold\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction Tabs() {\n  return React.createElement(Tab.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: HomeStacks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Diary\",\n    component: DiaryStacks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Recommendation\",\n    component: RecommendationStacks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction Mystack() {\n  return React.createElement(Stack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Login\",\n    component: LoginScreen,\n    options: {\n      header: function header() {\n        return null;\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Signup\",\n    component: SignupScreen,\n    options: {\n      header: function header() {\n        return null;\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLogin = _useState2[0],\n      setIsLogin = _useState2[1];\n\n  return React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }, isLogin !== true ? React.createElement(Mystack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 29\n    }\n  }) : React.createElement(Tabs, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 43\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/multicampus/Desktop/s04p31c103/frontend/app/App.js"],"names":["React","useState","StatusBar","NavigationContainer","createStackNavigator","createBottomTabNavigator","HomeScreen","LoginScreen","SignupScreen","DiaryScreen","DiaryWriteScreen","RecommendationScreen","SurveyintroScreen","SurveyquestionScreen","SurveyresultScreen","RoomScreen","PlantDetail","theme","ThemeProvider","Icon","firebase","apps","length","initializeApp","firebaseConfig","app","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Stack","Tab","HomeStack","RecommendationStack","HomeStacks","header","RecommendationStacks","title","DiaryStacks","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","Tabs","Mystack","App","isLogin","setIsLogin"],"mappings":"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","sourcesContent":["// react native\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport { StyleSheet, Text, View, Button } from \"react-native\";\r\nimport \"react-native-gesture-handler\";\r\n\r\n// react navigation\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\n\r\n// screen\r\nimport { HomeScreen } from \"./screens/main/Home\";\r\nimport { LoginScreen } from \"./screens/auth/Login\";\r\nimport { SignupScreen } from \"./screens/auth/Signup\";\r\nimport { DiaryScreen } from \"./screens/diary/Diary\";\r\nimport { DiaryWriteScreen } from \"./screens/diary/DiaryWrite\";\r\nimport { RecommendationScreen } from \"./screens/recommendation/Recommendation\";\r\nimport { SurveyintroScreen } from \"./screens/recommendation/SurveyIntro\";\r\nimport { SurveyquestionScreen } from \"./screens/recommendation/SurveyQ\";\r\nimport { SurveyresultScreen } from \"./screens/recommendation/SurveyResult\";\r\n\r\nimport { RoomScreen } from \"./screens/main/Room\";\r\nimport { PlantDetail } from \"./screens/main/PlantDetail\";\r\n\r\n// theme\r\nimport theme from \"./assets/theme/index\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { Icon } from \"native-base\";\r\n\r\n//firebase\r\nimport firebase from \"firebase/app\";\r\nimport {\r\n  GOOGLE_CLIENT_ID,\r\n  API_KEY,\r\n  MESSAGING_SENDER_ID,\r\n  APP_ID,\r\n  AUTH_DOMAIN,\r\n  DATABASE_URL,\r\n  PROJECT_ID,\r\n  STORAGE_BUCKET,\r\n  ANDROID_CLIENT_ID,\r\n} from \"@env\";\r\n\r\n// firebase.initializeApp(firebaseConfig);\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(firebaseConfig);\r\n} else {\r\n  firebase.app(); // if already initialized, use that one\r\n}\r\n\r\nconst firebaseConfig = {\r\n  apiKey: API_KEY,\r\n  authDomain: AUTH_DOMAIN,\r\n  databaseURL: DATABASE_URL,\r\n  projectId: PROJECT_ID,\r\n  storageBucket: STORAGE_BUCKET,\r\n  messagingSenderId: MESSAGING_SENDER_ID,\r\n  appId: APP_ID,\r\n  // measurementId: 'G-2NQFW6NDY4',\r\n};\r\n\r\nconst Stack = createStackNavigator();\r\nconst Tab = createBottomTabNavigator();\r\nconst HomeStack = createStackNavigator();\r\nconst RecommendationStack = createStackNavigator();\r\n\r\nfunction HomeStacks() {\r\n  return (\r\n    <HomeStack.Navigator>\r\n      <HomeStack.Screen\r\n        name=\"Home\"\r\n        component={HomeScreen}\r\n        options={{ header: () => null }}\r\n      />\r\n      <HomeStack.Screen\r\n        name=\"Room\"\r\n        component={RoomScreen}\r\n        options={{ header: () => null }}\r\n      />\r\n      <HomeStack.Screen\r\n        name=\"PlantDetail\"\r\n        component={PlantDetail}\r\n        options={{ header: () => null }}\r\n      />\r\n    </HomeStack.Navigator>\r\n  );\r\n}\r\n\r\nfunction RecommendationStacks() {\r\n  return (\r\n    <RecommendationStack.Navigator>\r\n      <RecommendationStack.Screen\r\n        name=\"Surveyintro\"\r\n        component={SurveyintroScreen}\r\n        options={{ header: () => null }}\r\n      />\r\n      <RecommendationStack.Screen\r\n        name=\"Surveyquestion\"\r\n        component={SurveyquestionScreen}\r\n        options={{ title: \"맞춤 식물 찾기\" }}\r\n      />\r\n      <RecommendationStack.Screen\r\n        name=\"Surveyresult\"\r\n        component={SurveyresultScreen}\r\n        options={{ title: \"맞춤 식물 찾기\" }}\r\n      />\r\n    </RecommendationStack.Navigator>\r\n  );\r\n}\r\nfunction DiaryStacks() {\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen\r\n        name=\"Diary\"\r\n        component={DiaryScreen}\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: \"#F9F9F9\",\r\n          },\r\n          headerTintColor: \"#29582C\",\r\n          headerTitleStyle: { fontWeight: \"bold\" },\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"DiaryWrite\"\r\n        component={DiaryWriteScreen}\r\n        options={{\r\n          title: \"피드 작성\",\r\n          headerStyle: {\r\n            backgroundColor: \"#F9F9F9\",\r\n          },\r\n          headerTintColor: \"#29582C\",\r\n          headerTitleStyle: { fontWeight: \"bold\" },\r\n        }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\nfunction Tabs() {\r\n  return (\r\n    <Tab.Navigator>\r\n      <Tab.Screen name=\"Home\" component={HomeStacks} />\r\n      <Tab.Screen name=\"Diary\" component={DiaryStacks} />\r\n      <Tab.Screen name=\"Recommendation\" component={RecommendationStacks} />\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n\r\nfunction Mystack() {\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen\r\n        name=\"Login\"\r\n        component={LoginScreen}\r\n        options={{ header: () => null }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"Signup\"\r\n        component={SignupScreen}\r\n        options={{ header: () => null }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  const [isLogin, setIsLogin] = useState(false);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <NavigationContainer>\r\n        {isLogin !== true ? <Mystack /> : <Tabs />}\r\n      </NavigationContainer>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}