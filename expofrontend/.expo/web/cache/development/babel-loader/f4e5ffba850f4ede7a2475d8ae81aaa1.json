{"ast":null,"code":"\"use_strict\";\n\nvar _lodash = require(\"lodash\");\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nmodule.exports = function (incomingProps, defaultProps) {\n  var computedProps = {};\n  incomingProps = _lodash2.default.clone(incomingProps);\n  delete incomingProps.children;\n  var incomingPropsStyle = incomingProps.style;\n  delete incomingProps.style;\n\n  if (incomingProps) {\n    _lodash2.default.assign(computedProps, defaultProps, incomingProps);\n  } else {\n    computedProps = defaultProps;\n  }\n\n  if (incomingPropsStyle) {\n    var computedPropsStyle = {};\n    computedProps.style = {};\n\n    if (Array.isArray(incomingPropsStyle)) {\n      _lodash2.default.forEach(incomingPropsStyle, function (style) {\n        if (typeof style === \"number\") {\n          _lodash2.default.merge(computedPropsStyle, _reactNative.StyleSheet.flatten(style));\n        } else {\n          _lodash2.default.merge(computedPropsStyle, style);\n        }\n      });\n    } else if (typeof incomingPropsStyle === \"number\") {\n      computedPropsStyle = _reactNative.StyleSheet.flatten(incomingPropsStyle);\n    } else {\n      computedPropsStyle = incomingPropsStyle;\n    }\n\n    _lodash2.default.merge(computedProps.style, defaultProps.style, computedPropsStyle);\n  }\n\n  return computedProps;\n};","map":{"version":3,"sources":["../../../src/utils/computeProps.js"],"names":["module","computedProps","incomingProps","_","incomingPropsStyle","computedPropsStyle","Array","StyleSheet","defaultProps"],"mappings":"AAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;sCACA,O;;;;;;;;AAEAA;;AAAAA,MAAAA,CAAAA,OAAAA,GAAiB,UAAA,aAAA,EAAA,YAAA,EAAsC;AAErD,MAAIC,aAAAA,GAAJ,EAAA;AAEAC,EAAAA,aAAAA,GAAgBC,QAAAA,CAAAA,OAAAA,CAAAA,KAAAA,CAAhBD,aAAgBC,CAAhBD;AACA,SAAOA,aAAAA,CAAP,QAAA;AAEA,MAAME,kBAAAA,GAAqBF,aAAAA,CAA3B,KAAA;AACA,SAAOA,aAAAA,CAAP,KAAA;;AAGA,MAAA,aAAA,EAAmB;AACjBC,IAAAA,QAAAA,CAAAA,OAAAA,CAAAA,MAAAA,CAAAA,aAAAA,EAAAA,YAAAA,EAAAA,aAAAA;AADF,GAAA,MAEO;AACLF,IAAAA,aAAAA,GAAAA,YAAAA;AAGF;;AAAA,MAAA,kBAAA,EAAwB;AACtB,QAAII,kBAAAA,GAAJ,EAAA;AACAJ,IAAAA,aAAAA,CAAAA,KAAAA,GAAAA,EAAAA;;AACA,QAAIK,KAAAA,CAAAA,OAAAA,CAAJ,kBAAIA,CAAJ,EAAuC;AACrCH,MAAAA,QAAAA,CAAAA,OAAAA,CAAAA,OAAAA,CAAAA,kBAAAA,EAA8B,UAAA,KAAA,EAAS;AACrC,YAAI,OAAA,KAAA,KAAJ,QAAA,EAA+B;AAC7BA,UAAAA,QAAAA,CAAAA,OAAAA,CAAAA,KAAAA,CAAAA,kBAAAA,EAA4BI,YAAAA,CAAAA,UAAAA,CAAAA,OAAAA,CAA5BJ,KAA4BI,CAA5BJ;AADF,SAAA,MAEO;AACLA,UAAAA,QAAAA,CAAAA,OAAAA,CAAAA,KAAAA,CAAAA,kBAAAA,EAAAA,KAAAA;AAEH;AANDA,OAAAA;AADF,KAAA,MAQO,IAAI,OAAA,kBAAA,KAAJ,QAAA,EAA4C;AACjDE,MAAAA,kBAAAA,GAAqBE,YAAAA,CAAAA,UAAAA,CAAAA,OAAAA,CAArBF,kBAAqBE,CAArBF;AADK,KAAA,MAEA;AACLA,MAAAA,kBAAAA,GAAAA,kBAAAA;AAGFF;;AAAAA,IAAAA,QAAAA,CAAAA,OAAAA,CAAAA,KAAAA,CAAQF,aAAAA,CAARE,KAAAA,EAA6BK,YAAAA,CAA7BL,KAAAA,EAAAA,kBAAAA;AAGF;;AAAA,SAAA,aAAA;AArCFH,CAAAA","sourcesContent":["\"use_strict\";\nimport _ from \"lodash\";\nimport { StyleSheet } from \"react-native\";\n\nmodule.exports = function(incomingProps, defaultProps) {\n  // External props has a higher precedence\n  let computedProps = {};\n\n  incomingProps = _.clone(incomingProps);\n  delete incomingProps.children;\n\n  const incomingPropsStyle = incomingProps.style;\n  delete incomingProps.style;\n\n  // console.log(defaultProps, incomingProps);\n  if (incomingProps) {\n    _.assign(computedProps, defaultProps, incomingProps);\n  } else {\n    computedProps = defaultProps;\n  }\n  // Pass the merged Style Object instead\n  if (incomingPropsStyle) {\n    let computedPropsStyle = {};\n    computedProps.style = {};\n    if (Array.isArray(incomingPropsStyle)) {\n      _.forEach(incomingPropsStyle, style => {\n        if (typeof style === \"number\") {\n          _.merge(computedPropsStyle, StyleSheet.flatten(style));\n        } else {\n          _.merge(computedPropsStyle, style);\n        }\n      });\n    } else if (typeof incomingPropsStyle === \"number\") {\n      computedPropsStyle = StyleSheet.flatten(incomingPropsStyle);\n    } else {\n      computedPropsStyle = incomingPropsStyle;\n    }\n\n    _.merge(computedProps.style, defaultProps.style, computedPropsStyle);\n  }\n  // console.log(\"computedProps \", computedProps);\n  return computedProps;\n};\n"]},"metadata":{},"sourceType":"script"}