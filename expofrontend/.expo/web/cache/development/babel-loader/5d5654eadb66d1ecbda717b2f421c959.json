{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Content = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _jsxFileName = \"src/basic/Content.js\";\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactNativeKeyboardAwareScrollView = require(\"react-native-keyboard-aware-scroll-view\");\n\nvar _nativeBaseShoutemTheme = require(\"native-base-shoutem-theme\");\n\nvar _platform = require(\"../theme/variables/platform\");\n\nvar _platform2 = _interopRequireDefault(_platform);\n\nvar _mapPropsToStyleNames = require(\"../utils/mapPropsToStyleNames\");\n\nvar _mapPropsToStyleNames2 = _interopRequireDefault(_mapPropsToStyleNames);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Content = function (_Component) {\n  _inherits(Content, _Component);\n\n  function Content(props) {\n    _classCallCheck(this, Content);\n\n    var _this = _possibleConstructorReturn(this, (Content.__proto__ || Object.getPrototypeOf(Content)).call(this, props));\n\n    _this.state = {\n      orientation: \"portrait\"\n    };\n    return _this;\n  }\n\n  _createClass(Content, [{\n    key: \"layoutChange\",\n    value: function layoutChange(val) {\n      var maxComp = Math.max(_platform2.default.deviceWidth, _platform2.default.deviceHeight);\n      if (val.width >= maxComp) this.setState({\n        orientation: \"landscape\"\n      });else {\n        this.setState({\n          orientation: \"portrait\"\n        });\n      }\n    }\n  }, {\n    key: \"calculateLeft\",\n    value: function calculateLeft(mode, inSet) {\n      var inset = null;\n\n      if (inSet !== undefined) {\n        inset = inSet;\n      } else {\n        inset = _platform2.default.Inset;\n      }\n\n      var InsetValues = mode === \"portrait\" ? inset.portrait : inset.landscape;\n      var leftPadder = null;\n\n      if (this.props.style[1] !== undefined) {\n        if (this.props.style[1].padding !== undefined || this.props.style[1].paddingLeft !== undefined) {\n          leftPadder = (this.props.style[1].paddingLeft ? this.props.style[1].paddingLeft : this.props.style[1].padding) + InsetValues.leftInset;\n        }\n      } else if (this.props.style.padding !== undefined || this.props.style.paddingLeft !== undefined) {\n        leftPadder = (this.props.style.paddingLeft ? this.props.style.paddingLeft : this.props.style.padding) + InsetValues.leftInset;\n      } else {\n        leftPadder = InsetValues.leftInset;\n      }\n\n      return leftPadder;\n    }\n  }, {\n    key: \"calculateRight\",\n    value: function calculateRight(mode, inSet) {\n      var inset = null;\n\n      if (inSet !== undefined) {\n        inset = inSet;\n      } else {\n        inset = _platform2.default.Inset;\n      }\n\n      var InsetValues = mode === \"portrait\" ? inset.portrait : inset.landscape;\n      var rightPadder = null;\n\n      if (this.props.style[1] !== undefined) {\n        if (this.props.style[1].padding !== undefined || this.props.style[1].paddingRight !== undefined) {\n          rightPadder = (this.props.style[1].paddingRight ? this.props.style[1].paddingRight : this.props.style[1].padding) + InsetValues.rightInset;\n        }\n      } else if (this.props.style.padding !== undefined || this.props.style.paddingRight !== undefined) {\n        rightPadder = (this.props.style.paddingRight ? this.props.style.paddingRight : this.props.style.padding) + InsetValues.rightInset;\n      } else {\n        rightPadder = InsetValues.rightInset;\n      }\n\n      return rightPadder;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var variables = this.context.theme ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables : _platform2.default;\n      return _platform2.default.isIphoneX ? _react2.default.createElement(_reactNativeKeyboardAwareScrollView.KeyboardAwareScrollView, _extends({\n        automaticallyAdjustContentInsets: false,\n        resetScrollToCoords: this.props.disableKBDismissScroll ? null : {\n          x: 0,\n          y: 0\n        },\n        keyboardShouldPersistTaps: this.props.keyboardShouldPersistTaps ? this.props.keyboardShouldPersistTaps : \"handled\",\n        ref: function ref(c) {\n          _this2._scrollview = c;\n          _this2._root = c;\n        }\n      }, this.props, {\n        onLayout: function onLayout(e) {\n          return _this2.layoutChange(e.nativeEvent.layout);\n        },\n        style: [this.props.style, {\n          paddingLeft: this.calculateLeft(this.state.orientation, variables.Inset)\n        }],\n        contentContainerStyle: [{\n          padding: this.props.padder ? variables.contentPadding : undefined\n        }, this.props.contentContainerStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        }\n      }), this.props.children) : _react2.default.createElement(_reactNativeKeyboardAwareScrollView.KeyboardAwareScrollView, _extends({\n        automaticallyAdjustContentInsets: false,\n        resetScrollToCoords: this.props.disableKBDismissScroll ? null : {\n          x: 0,\n          y: 0\n        },\n        keyboardShouldPersistTaps: this.props.keyboardShouldPersistTaps ? this.props.keyboardShouldPersistTaps : \"handled\",\n        ref: function ref(c) {\n          _this2._scrollview = c;\n          _this2._root = c;\n        }\n      }, this.props, {\n        contentContainerStyle: [{\n          padding: this.props.padder ? variables.contentPadding : undefined\n        }, this.props.contentContainerStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        }\n      }), this.props.children);\n    }\n  }]);\n\n  return Content;\n}(_react.Component);\n\nContent.contextTypes = {\n  theme: _propTypes2.default.object\n};\nContent.propTypes = {\n  style: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.number, _propTypes2.default.array]),\n  padder: _propTypes2.default.bool,\n  disableKBDismissScroll: _propTypes2.default.bool,\n  enableResetScrollToCoords: _propTypes2.default.bool,\n  keyboardShouldPersistTaps: _propTypes2.default.string\n};\nvar StyledContent = (0, _nativeBaseShoutemTheme.connectStyle)(\"NativeBase.Content\", {}, _mapPropsToStyleNames2.default)(Content);\nexports.Content = StyledContent;","map":{"version":3,"sources":["../../../src/basic/Content.js"],"names":["Content","Component","contextTypes","theme","PropTypes","orientation","val","maxComp","Math","variable","mode","inSet","inset","InsetValues","leftPadder","rightPadder","variables","x","y","e","paddingLeft","padding","style","padder","disableKBDismissScroll","enableResetScrollToCoords","keyboardShouldPersistTaps","StyledContent","mapPropsToStyleNames"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport variable from \"../theme/variables/platform\";\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\n\nclass Content extends Component {\n  static contextTypes = {\n    theme: PropTypes.object\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      orientation: \"portrait\"\n    };\n  }\n  layoutChange(val) {\n    let maxComp = Math.max(variable.deviceWidth, variable.deviceHeight);\n    if (val.width >= maxComp) this.setState({ orientation: \"landscape\" });\n    else {\n      this.setState({ orientation: \"portrait\" });\n    }\n  }\n\n  calculateLeft(mode, inSet) {\n    let inset = null;\n    if (inSet !== undefined) {\n      inset = inSet;\n    } else {\n      inset = variable.Inset;\n    }\n    const InsetValues = mode === \"portrait\" ? inset.portrait : inset.landscape;\n    let leftPadder = null;\n    if (this.props.style[1] !== undefined) {\n      if (\n        this.props.style[1].padding !== undefined ||\n        this.props.style[1].paddingLeft !== undefined\n      ) {\n        leftPadder =\n          (this.props.style[1].paddingLeft\n            ? this.props.style[1].paddingLeft\n            : this.props.style[1].padding) + InsetValues.leftInset;\n      }\n    } else if (\n      this.props.style.padding !== undefined ||\n      this.props.style.paddingLeft !== undefined\n    ) {\n      leftPadder =\n        (this.props.style.paddingLeft\n          ? this.props.style.paddingLeft\n          : this.props.style.padding) + InsetValues.leftInset;\n    } else {\n      leftPadder = InsetValues.leftInset;\n    }\n    return leftPadder;\n  }\n  calculateRight(mode, inSet) {\n    let inset = null;\n    if (inSet !== undefined) {\n      inset = inSet;\n    } else {\n      inset = variable.Inset;\n    }\n    const InsetValues = mode === \"portrait\" ? inset.portrait : inset.landscape;\n    let rightPadder = null;\n    if (this.props.style[1] !== undefined) {\n      if (\n        this.props.style[1].padding !== undefined ||\n        this.props.style[1].paddingRight !== undefined\n      ) {\n        rightPadder =\n          (this.props.style[1].paddingRight\n            ? this.props.style[1].paddingRight\n            : this.props.style[1].padding) + InsetValues.rightInset;\n      }\n    } else if (\n      this.props.style.padding !== undefined ||\n      this.props.style.paddingRight !== undefined\n    ) {\n      rightPadder =\n        (this.props.style.paddingRight\n          ? this.props.style.paddingRight\n          : this.props.style.padding) + InsetValues.rightInset;\n    } else {\n      rightPadder = InsetValues.rightInset;\n    }\n    return rightPadder;\n  }\n  render() {\n    const variables = this.context.theme\n      ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables\n      : variable;\n    return variable.isIphoneX ? (\n      <KeyboardAwareScrollView\n        automaticallyAdjustContentInsets={false}\n        resetScrollToCoords={\n          this.props.disableKBDismissScroll ? null : { x: 0, y: 0 }\n        }\n        keyboardShouldPersistTaps={\n          this.props.keyboardShouldPersistTaps\n            ? this.props.keyboardShouldPersistTaps\n            : \"handled\"\n        }\n        ref={c => {\n          this._scrollview = c;\n          this._root = c;\n        }}\n        {...this.props}\n        onLayout={e => this.layoutChange(e.nativeEvent.layout)}\n        style={[\n          this.props.style,\n          {\n            paddingLeft: this.calculateLeft(\n              this.state.orientation,\n              variables.Inset\n            )\n          }\n        ]}\n\t\tcontentContainerStyle={[{ padding: this.props.padder ? variables.contentPadding : undefined }, this.props.contentContainerStyle]}\n      >\n        {this.props.children}\n      </KeyboardAwareScrollView>\n    ) : (\n      <KeyboardAwareScrollView\n        automaticallyAdjustContentInsets={false}\n        resetScrollToCoords={\n          this.props.disableKBDismissScroll ? null : { x: 0, y: 0 }\n        }\n        keyboardShouldPersistTaps={\n          this.props.keyboardShouldPersistTaps\n            ? this.props.keyboardShouldPersistTaps\n            : \"handled\"\n        }\n        ref={c => {\n          this._scrollview = c;\n          this._root = c;\n        }}\n\t\t{...this.props}\n\t\tcontentContainerStyle={[{ padding: this.props.padder ? variables.contentPadding : undefined }, this.props.contentContainerStyle]}\n      >\n        {this.props.children}\n      </KeyboardAwareScrollView>\n    );\n  }\n}\n\nContent.propTypes = {\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array\n  ]),\n  padder: PropTypes.bool,\n  disableKBDismissScroll: PropTypes.bool,\n  enableResetScrollToCoords: PropTypes.bool,\n  keyboardShouldPersistTaps: PropTypes.string\n};\n\nconst StyledContent = connectStyle(\n  \"NativeBase.Content\",\n  {},\n  mapPropsToStyleNames\n)(Content);\n\nexport { StyledContent as Content };"]},"metadata":{},"sourceType":"script"}