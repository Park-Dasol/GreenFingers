{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Button = undefined;\nvar _jsxFileName = \"src/basic/Button.js\";\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _nativeBaseShoutemTheme = require(\"native-base-shoutem-theme\");\n\nvar _platform = require(\"./../theme/variables/platform\");\n\nvar _platform2 = _interopRequireDefault(_platform);\n\nvar _Text = require(\"./Text\");\n\nvar _computeProps = require(\"../utils/computeProps\");\n\nvar _computeProps2 = _interopRequireDefault(_computeProps);\n\nvar _mapPropsToStyleNames = require(\"../utils/mapPropsToStyleNames\");\n\nvar _mapPropsToStyleNames2 = _interopRequireDefault(_mapPropsToStyleNames);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Button = function (_Component) {\n  _inherits(Button, _Component);\n\n  function Button() {\n    _classCallCheck(this, Button);\n\n    return _possibleConstructorReturn(this, (Button.__proto__ || Object.getPrototypeOf(Button)).apply(this, arguments));\n  }\n\n  _createClass(Button, [{\n    key: \"getInitialStyle\",\n    value: function getInitialStyle() {\n      return {\n        borderedBtn: {\n          borderWidth: this.props.bordered ? 1 : undefined,\n          borderRadius: this.props.rounded && this.props.bordered ? _platform2.default.borderRadiusLarge : 2\n        }\n      };\n    }\n  }, {\n    key: \"prepareRootProps\",\n    value: function prepareRootProps() {\n      var defaultProps = {\n        style: this.getInitialStyle().borderedBtn\n      };\n      return (0, _computeProps2.default)(this.props, defaultProps);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var variables = this.context.theme ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables : _platform2.default;\n      var children = _reactNative.Platform.OS === \"ios\" ? this.props.children : _react2.default.Children.map(this.props.children, function (child) {\n        return child && child.type === _Text.Text ? _react2.default.cloneElement(child, _extends({\n          uppercase: variables.btnUppercaseAndroidText\n        }, child.props)) : child;\n      });\n\n      if (_reactNative.Platform.OS === \"ios\" || _reactNative.Platform.OS === \"web\" || variables.androidRipple === false || _reactNative.Platform[\"Version\"] < 21) {\n        return _react2.default.createElement(_reactNative.TouchableOpacity, _extends({}, this.prepareRootProps(), {\n          ref: function ref(c) {\n            return _this2._root = c;\n          },\n          activeOpacity: this.props.activeOpacity > 0 ? this.props.activeOpacity : 0.5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          }\n        }), children);\n      } else {\n        if (this.props.rounded) {\n          var buttonStyle = _extends({}, this.prepareRootProps().style);\n\n          var buttonFlex = this.props.full || this.props.block ? 1 : buttonStyle.flex;\n          return _react2.default.createElement(_reactNative.View, {\n            style: [{\n              maxHeight: buttonStyle.height\n            }, buttonStyle, {\n              paddingTop: undefined,\n              paddingBottom: undefined\n            }],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            }\n          }, _react2.default.createElement(_reactNative.TouchableNativeFeedback, _extends({\n            ref: function ref(c) {\n              return _this2._root = c;\n            },\n            background: this.props.androidRippleColor ? _reactNative.TouchableNativeFeedback.Ripple(this.props.androidRippleColor, true) : _reactNative.TouchableNativeFeedback.Ripple(variables.androidRippleColor, true)\n          }, this.prepareRootProps(), {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            }\n          }), _react2.default.createElement(_reactNative.View, {\n            style: [styles.childContainer, {\n              paddingTop: buttonStyle.paddingTop,\n              paddingBottom: buttonStyle.paddingBottom,\n              height: buttonStyle.height,\n              flexGrow: buttonFlex\n            }],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            }\n          }, children)));\n        } else {\n          return _react2.default.createElement(_reactNative.TouchableNativeFeedback, _extends({\n            ref: function ref(c) {\n              return _this2._root = c;\n            },\n            onPress: this.props.onPress,\n            background: this.props.transparent ? _reactNative.TouchableNativeFeedback.Ripple('transparent') : _reactNative.TouchableNativeFeedback.Ripple(variables.androidRippleColor, false)\n          }, this.prepareRootProps(), {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            }\n          }), _react2.default.createElement(_reactNative.View, _extends({}, this.prepareRootProps(), {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106\n            }\n          }), children));\n        }\n      }\n    }\n  }]);\n\n  return Button;\n}(_react.Component);\n\nButton.contextTypes = {\n  theme: _propTypes2.default.object\n};\nButton.propTypes = _extends({}, _reactNative.TouchableOpacity.propTypes, {\n  style: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.number, _propTypes2.default.array]),\n  block: _propTypes2.default.bool,\n  primary: _propTypes2.default.bool,\n  transparent: _propTypes2.default.bool,\n  success: _propTypes2.default.bool,\n  danger: _propTypes2.default.bool,\n  warning: _propTypes2.default.bool,\n  info: _propTypes2.default.bool,\n  bordered: _propTypes2.default.bool,\n  disabled: _propTypes2.default.bool,\n  rounded: _propTypes2.default.bool,\n  large: _propTypes2.default.bool,\n  small: _propTypes2.default.bool,\n  active: _propTypes2.default.bool\n});\n\nvar styles = _reactNative.StyleSheet.create({\n  childContainer: {\n    flexShrink: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\n\nvar StyledButton = (0, _nativeBaseShoutemTheme.connectStyle)(\"NativeBase.Button\", {}, _mapPropsToStyleNames2.default)(Button);\nexports.Button = StyledButton;","map":{"version":3,"sources":["../../../src/basic/Button.js"],"names":["Button","Component","contextTypes","theme","PropTypes","borderedBtn","borderWidth","borderRadius","variable","defaultProps","style","variables","children","Platform","React","child","Text","uppercase","buttonStyle","buttonFlex","maxHeight","paddingTop","paddingBottom","TouchableNativeFeedback","styles","height","flexGrow","TouchableOpacity","block","primary","transparent","success","danger","warning","info","bordered","disabled","rounded","large","small","active","StyleSheet","childContainer","flexShrink","flexDirection","justifyContent","alignItems","StyledButton","mapPropsToStyleNames"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  TouchableOpacity,\n  Platform,\n  View,\n  TouchableNativeFeedback,\n  StyleSheet\n} from \"react-native\";\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport variable from \"./../theme/variables/platform\";\nimport { Text } from \"./Text\";\nimport computeProps from \"../utils/computeProps\";\n\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\n\nclass Button extends Component {\n  static contextTypes = {\n    theme: PropTypes.object\n  };\n\n  getInitialStyle() {\n    return {\n      borderedBtn: {\n        borderWidth: this.props.bordered ? 1 : undefined,\n        borderRadius:\n          this.props.rounded && this.props.bordered\n            ? variable.borderRadiusLarge\n            : 2\n      }\n    };\n  }\n\n  _root: React$Element<TouchableOpacity | TouchableNativeFeedback>;\n\n  prepareRootProps() {\n    const defaultProps = {\n      style: this.getInitialStyle().borderedBtn\n    };\n\n    return computeProps(this.props, defaultProps);\n  }\n  render() {\n    const variables = this.context.theme\n      ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables\n      : variable;\n    const children =\n      Platform.OS === \"ios\"\n        ? this.props.children\n        : React.Children.map(\n          this.props.children,\n          child =>\n            child && child.type === Text\n              ? React.cloneElement(child, {\n                uppercase: variables.btnUppercaseAndroidText,\n                ...child.props\n              })\n              : child\n        );\n    if (\n      Platform.OS === \"ios\" ||\n      Platform.OS === \"web\" ||\n      variables.androidRipple === false ||\n      Platform[\"Version\"] < 21\n    ) {\n      return (\n        <TouchableOpacity\n          {...this.prepareRootProps()}\n          ref={c => (this._root = c)}\n          activeOpacity={\n            this.props.activeOpacity > 0 ? this.props.activeOpacity : 0.5\n          }\n        >\n          {children}\n        </TouchableOpacity>\n      );\n    } else {\n      if (this.props.rounded) {\n        let buttonStyle = { ...this.prepareRootProps().style };\n        let buttonFlex = (this.props.full || this.props.block) ? 1 : buttonStyle.flex;\n        return (\n          <View style={[{ maxHeight: buttonStyle.height }, buttonStyle, { paddingTop: undefined, paddingBottom: undefined }]} >\n            <TouchableNativeFeedback\n              ref={c => (this._root = c)}\n              background={\n                this.props.androidRippleColor\n                  ? TouchableNativeFeedback.Ripple(this.props.androidRippleColor, true)\n                  : TouchableNativeFeedback.Ripple(variables.androidRippleColor, true)\n              }\n              {...this.prepareRootProps()}\n            >\n              <View style={[styles.childContainer, { paddingTop: buttonStyle.paddingTop, paddingBottom: buttonStyle.paddingBottom, height: buttonStyle.height, flexGrow: buttonFlex }]}>\n                {children}\n              </View>\n            </TouchableNativeFeedback>\n          </View >\n        );\n      } else {\n        return (\n          <TouchableNativeFeedback\n            ref={c => (this._root = c)}\n            onPress={this.props.onPress}\n            background={this.props.transparent ? TouchableNativeFeedback.Ripple('transparent') : TouchableNativeFeedback.Ripple(variables.androidRippleColor, false)}\n            {...this.prepareRootProps()}\n          >\n            <View {...this.prepareRootProps()}>{children}</View>\n          </TouchableNativeFeedback>\n        );\n      }\n    }\n  }\n}\n\nButton.propTypes = {\n  ...TouchableOpacity.propTypes,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array\n  ]),\n  block: PropTypes.bool,\n  primary: PropTypes.bool,\n  transparent: PropTypes.bool,\n  success: PropTypes.bool,\n  danger: PropTypes.bool,\n  warning: PropTypes.bool,\n  info: PropTypes.bool,\n  bordered: PropTypes.bool,\n  disabled: PropTypes.bool,\n  rounded: PropTypes.bool,\n  large: PropTypes.bool,\n  small: PropTypes.bool,\n  active: PropTypes.bool\n};\n\nconst styles = StyleSheet.create({\n  childContainer: {\n    flexShrink: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n});\n\nconst StyledButton = connectStyle(\n  \"NativeBase.Button\",\n  {},\n  mapPropsToStyleNames\n)(Button);\nexport { StyledButton as Button };\n"]},"metadata":{},"sourceType":"script"}