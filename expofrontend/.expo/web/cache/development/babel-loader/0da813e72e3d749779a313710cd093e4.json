{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\multicampus\\\\Desktop\\\\s04p31c103\\\\frontend\\\\node_modules\\\\react-native-calendars\\\\src\\\\calendar\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport GestureRecognizer, { swipeDirections } from 'react-native-swipe-gestures';\nimport dateutils from \"../dateutils\";\nimport { xdateToData, parseDate } from \"../interface\";\nimport shouldComponentUpdate from \"./updater\";\nimport { extractComponentProps } from \"../component-updater\";\nimport { WEEK_NUMBER } from \"../testIDs\";\nimport styleConstructor from \"./style\";\nimport CalendarHeader from \"./header\";\nimport BasicDay from \"./day/basic\";\nimport Day from \"./day/index\";\nvar EmptyArray = [];\n\nvar Calendar = function (_Component) {\n  _inherits(Calendar, _Component);\n\n  var _super = _createSuper(Calendar);\n\n  function Calendar(props) {\n    var _this;\n\n    _classCallCheck(this, Calendar);\n\n    _this = _super.call(this, props);\n\n    _this.addMonth = function (count) {\n      _this.updateMonth(_this.state.currentMonth.clone().addMonths(count, true));\n    };\n\n    _this.updateMonth = function (day, doNotTriggerListeners) {\n      if (day.toString('yyyy MM') === _this.state.currentMonth.toString('yyyy MM')) {\n        return;\n      }\n\n      _this.setState({\n        currentMonth: day.clone()\n      }, function () {\n        if (!doNotTriggerListeners) {\n          var currMont = _this.state.currentMonth.clone();\n\n          _.invoke(_this.props, 'onMonthChange', xdateToData(currMont));\n\n          _.invoke(_this.props, 'onVisibleMonthsChange', [xdateToData(currMont)]);\n        }\n      });\n    };\n\n    _this.pressDay = function (date) {\n      _this._handleDayInteraction(date, _this.props.onDayPress);\n    };\n\n    _this.longPressDay = function (date) {\n      _this._handleDayInteraction(date, _this.props.onDayLongPress);\n    };\n\n    _this.onSwipe = function (gestureName) {\n      var SWIPE_UP = swipeDirections.SWIPE_UP,\n          SWIPE_DOWN = swipeDirections.SWIPE_DOWN,\n          SWIPE_LEFT = swipeDirections.SWIPE_LEFT,\n          SWIPE_RIGHT = swipeDirections.SWIPE_RIGHT;\n\n      switch (gestureName) {\n        case SWIPE_UP:\n        case SWIPE_DOWN:\n          break;\n\n        case SWIPE_LEFT:\n          _this.onSwipeLeft();\n\n          break;\n\n        case SWIPE_RIGHT:\n          _this.onSwipeRight();\n\n          break;\n      }\n    };\n\n    _this.onSwipeLeft = function () {\n      _this.header.onPressRight();\n    };\n\n    _this.onSwipeRight = function () {\n      _this.header.onPressLeft();\n    };\n\n    _this.style = styleConstructor(props.theme);\n    _this.state = {\n      currentMonth: props.current ? parseDate(props.current) : XDate()\n    };\n    _this.shouldComponentUpdate = shouldComponentUpdate;\n    return _this;\n  }\n\n  _createClass(Calendar, [{\n    key: \"_handleDayInteraction\",\n    value: function _handleDayInteraction(date, interaction) {\n      var disableMonthChange = this.props.disableMonthChange;\n      var day = parseDate(date);\n      var minDate = parseDate(this.props.minDate);\n      var maxDate = parseDate(this.props.maxDate);\n\n      if (!(minDate && !dateutils.isGTE(day, minDate)) && !(maxDate && !dateutils.isLTE(day, maxDate))) {\n        var shouldUpdateMonth = disableMonthChange === undefined || !disableMonthChange;\n\n        if (shouldUpdateMonth) {\n          this.updateMonth(day);\n        }\n\n        if (interaction) {\n          interaction(xdateToData(day));\n        }\n      }\n    }\n  }, {\n    key: \"getDateMarking\",\n    value: function getDateMarking(day) {\n      var markedDates = this.props.markedDates;\n\n      if (!markedDates) {\n        return false;\n      }\n\n      var dates = markedDates[day.toString('yyyy-MM-dd')] || EmptyArray;\n\n      if (dates.length || dates) {\n        return dates;\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"getState\",\n    value: function getState(day) {\n      var disabledByDefault = this.props.disabledByDefault;\n      var minDate = parseDate(this.props.minDate);\n      var maxDate = parseDate(this.props.maxDate);\n      var state = '';\n\n      if (disabledByDefault) {\n        state = 'disabled';\n      } else if (dateutils.isDateNotInTheRange(minDate, maxDate, day)) {\n        state = 'disabled';\n      } else if (!dateutils.sameMonth(day, this.state.currentMonth)) {\n        state = 'disabled';\n      } else if (dateutils.sameDate(day, XDate())) {\n        state = 'today';\n      }\n\n      return state;\n    }\n  }, {\n    key: \"renderWeekNumber\",\n    value: function renderWeekNumber(weekNumber) {\n      return React.createElement(View, {\n        style: this.style.dayContainer,\n        key: \"week-container-\" + weekNumber,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 7\n        }\n      }, React.createElement(BasicDay, {\n        key: \"week-\" + weekNumber,\n        marking: {\n          disableTouchEvent: true\n        },\n        state: \"disabled\",\n        theme: this.props.theme,\n        testID: WEEK_NUMBER + \"-\" + weekNumber,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 9\n        }\n      }, weekNumber));\n    }\n  }, {\n    key: \"renderDay\",\n    value: function renderDay(day, id) {\n      var hideExtraDays = this.props.hideExtraDays;\n      var dayProps = extractComponentProps(Day, this.props);\n\n      if (!dateutils.sameMonth(day, this.state.currentMonth) && hideExtraDays) {\n        return React.createElement(View, {\n          key: id,\n          style: this.style.emptyDayContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 14\n          }\n        });\n      }\n\n      return React.createElement(View, {\n        style: this.style.dayContainer,\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 7\n        }\n      }, React.createElement(Day, _extends({}, dayProps, {\n        day: day,\n        state: this.getState(day),\n        marking: this.getDateMarking(day),\n        onPress: this.pressDay,\n        onLongPress: this.longPressDay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 9\n        }\n      })));\n    }\n  }, {\n    key: \"renderWeek\",\n    value: function renderWeek(days, id) {\n      var _this2 = this;\n\n      var week = [];\n      days.forEach(function (day, id2) {\n        week.push(_this2.renderDay(day, id2));\n      }, this);\n\n      if (this.props.showWeekNumbers) {\n        week.unshift(this.renderWeekNumber(days[days.length - 1].getWeek()));\n      }\n\n      return React.createElement(View, {\n        style: this.style.week,\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 7\n        }\n      }, week);\n    }\n  }, {\n    key: \"renderMonth\",\n    value: function renderMonth() {\n      var currentMonth = this.state.currentMonth;\n      var _this$props = this.props,\n          firstDay = _this$props.firstDay,\n          showSixWeeks = _this$props.showSixWeeks,\n          hideExtraDays = _this$props.hideExtraDays;\n      var shouldShowSixWeeks = showSixWeeks && !hideExtraDays;\n      var days = dateutils.page(currentMonth, firstDay, shouldShowSixWeeks);\n      var weeks = [];\n\n      while (days.length) {\n        weeks.push(this.renderWeek(days.splice(0, 7), weeks.length));\n      }\n\n      return React.createElement(View, {\n        style: this.style.monthView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 12\n        }\n      }, weeks);\n    }\n  }, {\n    key: \"renderHeader\",\n    value: function renderHeader() {\n      var _this3 = this;\n\n      var _this$props2 = this.props,\n          customHeader = _this$props2.customHeader,\n          headerStyle = _this$props2.headerStyle,\n          displayLoadingIndicator = _this$props2.displayLoadingIndicator,\n          markedDates = _this$props2.markedDates,\n          testID = _this$props2.testID;\n      var current = parseDate(this.props.current);\n      var indicator;\n\n      if (current) {\n        var lastMonthOfDay = current.clone().addMonths(1, true).setDate(1).addDays(-1).toString('yyyy-MM-dd');\n\n        if (displayLoadingIndicator && !(markedDates && markedDates[lastMonthOfDay])) {\n          indicator = true;\n        }\n      }\n\n      var headerProps = extractComponentProps(CalendarHeader, this.props);\n\n      var props = _objectSpread(_objectSpread({}, headerProps), {}, {\n        testID: testID,\n        style: headerStyle,\n        ref: function ref(c) {\n          return _this3.header = c;\n        },\n        month: this.state.currentMonth,\n        addMonth: this.addMonth,\n        displayLoadingIndicator: indicator\n      });\n\n      var CustomHeader = customHeader;\n      var HeaderComponent = customHeader ? CustomHeader : CalendarHeader;\n      return React.createElement(HeaderComponent, _extends({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 12\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$props3 = this.props,\n          enableSwipeMonths = _this$props3.enableSwipeMonths,\n          style = _this$props3.style;\n      var GestureComponent = enableSwipeMonths ? GestureRecognizer : View;\n      var gestureProps = enableSwipeMonths ? {\n        onSwipe: function onSwipe(direction, state) {\n          return _this4.onSwipe(direction, state);\n        }\n      } : {};\n      return React.createElement(GestureComponent, _extends({}, gestureProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 7\n        }\n      }), React.createElement(View, {\n        style: [this.style.container, style],\n        accessibilityElementsHidden: this.props.accessibilityElementsHidden,\n        importantForAccessibility: this.props.importantForAccessibility,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 9\n        }\n      }, this.renderHeader(), this.renderMonth()));\n    }\n  }]);\n\n  return Calendar;\n}(Component);\n\nCalendar.displayName = 'Calendar';\nCalendar.propTypes = _objectSpread(_objectSpread(_objectSpread({}, CalendarHeader.propTypes), Day.propTypes), {}, {\n  theme: PropTypes.object,\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.number]),\n  current: PropTypes.any,\n  minDate: PropTypes.any,\n  maxDate: PropTypes.any,\n  firstDay: PropTypes.number,\n  markedDates: PropTypes.object,\n  displayLoadingIndicator: PropTypes.bool,\n  showWeekNumbers: PropTypes.bool,\n  hideExtraDays: PropTypes.bool,\n  showSixWeeks: PropTypes.bool,\n  onDayPress: PropTypes.func,\n  onDayLongPress: PropTypes.func,\n  onMonthChange: PropTypes.func,\n  onVisibleMonthsChange: PropTypes.func,\n  disableMonthChange: PropTypes.bool,\n  enableSwipeMonths: PropTypes.bool,\n  disabledByDefault: PropTypes.bool,\n  headerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  customHeader: PropTypes.any\n});\nCalendar.defaultProps = {\n  enableSwipeMonths: false\n};\nexport default Calendar;","map":{"version":3,"sources":["C:/Users/multicampus/Desktop/s04p31c103/frontend/node_modules/react-native-calendars/src/calendar/index.js"],"names":["_","PropTypes","XDate","React","Component","GestureRecognizer","swipeDirections","dateutils","xdateToData","parseDate","shouldComponentUpdate","extractComponentProps","WEEK_NUMBER","styleConstructor","CalendarHeader","BasicDay","Day","EmptyArray","Calendar","props","addMonth","count","updateMonth","state","currentMonth","clone","addMonths","day","doNotTriggerListeners","toString","setState","currMont","invoke","pressDay","date","_handleDayInteraction","onDayPress","longPressDay","onDayLongPress","onSwipe","gestureName","SWIPE_UP","SWIPE_DOWN","SWIPE_LEFT","SWIPE_RIGHT","onSwipeLeft","onSwipeRight","header","onPressRight","onPressLeft","style","theme","current","interaction","disableMonthChange","minDate","maxDate","isGTE","isLTE","shouldUpdateMonth","undefined","markedDates","dates","length","disabledByDefault","isDateNotInTheRange","sameMonth","sameDate","weekNumber","dayContainer","disableTouchEvent","id","hideExtraDays","dayProps","emptyDayContainer","getState","getDateMarking","days","week","forEach","id2","push","renderDay","showWeekNumbers","unshift","renderWeekNumber","getWeek","firstDay","showSixWeeks","shouldShowSixWeeks","page","weeks","renderWeek","splice","monthView","customHeader","headerStyle","displayLoadingIndicator","testID","indicator","lastMonthOfDay","setDate","addDays","headerProps","ref","c","month","CustomHeader","HeaderComponent","enableSwipeMonths","GestureComponent","View","gestureProps","direction","container","accessibilityElementsHidden","importantForAccessibility","renderHeader","renderMonth","displayName","propTypes","object","oneOfType","array","number","any","bool","func","onMonthChange","onVisibleMonthsChange","defaultProps"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, {Component} from 'react';\nimport {View} from 'react-native';\nimport GestureRecognizer, {swipeDirections} from 'react-native-swipe-gestures';\nimport dateutils from '../dateutils';\nimport {xdateToData, parseDate} from '../interface';\nimport shouldComponentUpdate from './updater';\nimport {extractComponentProps} from '../component-updater';\nimport {WEEK_NUMBER} from '../testIDs';\nimport styleConstructor from './style';\nimport CalendarHeader from './header';\nimport BasicDay from './day/basic';\nimport Day from './day/index';\n\nconst EmptyArray = [];\n\n/**\n * @description: Calendar component\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/calendars.js\n * @gif: https://github.com/wix/react-native-calendars/blob/master/demo/calendar.gif\n */\nclass Calendar extends Component {\n  static displayName = 'Calendar';\n\n  static propTypes = {\n    ...CalendarHeader.propTypes,\n    ...Day.propTypes,\n    /** Specify theme properties to override specific styles for calendar parts. Default = {} */\n    theme: PropTypes.object,\n    /** Specify style for calendar container element. Default = {} */\n    style: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.number]),\n    /** Initially visible month. Default = Date() */\n    current: PropTypes.any,\n    /** Minimum date that can be selected, dates before minDate will be grayed out. Default = undefined */\n    minDate: PropTypes.any,\n    /** Maximum date that can be selected, dates after maxDate will be grayed out. Default = undefined */\n    maxDate: PropTypes.any,\n    /** If firstDay=1 week starts from Monday. Note that dayNames and dayNamesShort should still start from Sunday. */\n    firstDay: PropTypes.number,\n    /** Collection of dates that have to be marked. Default = {} */\n    markedDates: PropTypes.object,\n    /** Display loading indicator. Default = false */\n    displayLoadingIndicator: PropTypes.bool,\n    /** Show week numbers. Default = false */\n    showWeekNumbers: PropTypes.bool,\n    /** Do not show days of other months in month page. Default = false */\n    hideExtraDays: PropTypes.bool,\n    /** Always show six weeks on each month (only when hideExtraDays = false). Default = false */\n    showSixWeeks: PropTypes.bool,\n    /** Handler which gets executed on day press. Default = undefined */\n    onDayPress: PropTypes.func,\n    /** Handler which gets executed on day long press. Default = undefined */\n    onDayLongPress: PropTypes.func,\n    /** Handler which gets executed when month changes in calendar. Default = undefined */\n    onMonthChange: PropTypes.func,\n    /** Handler which gets executed when visible month changes in calendar. Default = undefined */\n    onVisibleMonthsChange: PropTypes.func,\n    /** Disables changing month when click on days of other months (when hideExtraDays is false). Default = false */\n    disableMonthChange: PropTypes.bool,\n    /** Enable the option to swipe between months. Default: false */\n    enableSwipeMonths: PropTypes.bool,\n    /** Disable days by default. Default = false */\n    disabledByDefault: PropTypes.bool,\n    /** Style passed to the header */\n    headerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    /** Allow rendering of a totally custom header */\n    customHeader: PropTypes.any\n  };\n\n  static defaultProps = {\n    enableSwipeMonths: false\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.style = styleConstructor(props.theme);\n\n    this.state = {\n      currentMonth: props.current ? parseDate(props.current) : XDate()\n    };\n\n    this.shouldComponentUpdate = shouldComponentUpdate;\n  }\n  \n  addMonth = count => {\n    this.updateMonth(this.state.currentMonth.clone().addMonths(count, true));\n  };\n\n  updateMonth = (day, doNotTriggerListeners) => {\n    if (day.toString('yyyy MM') === this.state.currentMonth.toString('yyyy MM')) {\n      return;\n    }\n\n    this.setState(\n      {\n        currentMonth: day.clone()\n      },\n      () => {\n        if (!doNotTriggerListeners) {\n          const currMont = this.state.currentMonth.clone();\n          _.invoke(this.props, 'onMonthChange', xdateToData(currMont));\n          _.invoke(this.props, 'onVisibleMonthsChange', [xdateToData(currMont)]);\n        }\n      }\n    );\n  };\n\n  _handleDayInteraction(date, interaction) {\n    const {disableMonthChange} = this.props;\n    const day = parseDate(date);\n    const minDate = parseDate(this.props.minDate);\n    const maxDate = parseDate(this.props.maxDate);\n\n    if (!(minDate && !dateutils.isGTE(day, minDate)) && !(maxDate && !dateutils.isLTE(day, maxDate))) {\n      const shouldUpdateMonth = disableMonthChange === undefined || !disableMonthChange;\n\n      if (shouldUpdateMonth) {\n        this.updateMonth(day);\n      }\n      if (interaction) {\n        interaction(xdateToData(day));\n      }\n    }\n  }\n\n  pressDay = date => {\n    this._handleDayInteraction(date, this.props.onDayPress);\n  };\n\n  longPressDay = date => {\n    this._handleDayInteraction(date, this.props.onDayLongPress);\n  };\n\n  getDateMarking(day) {\n    const {markedDates} = this.props;\n\n    if (!markedDates) {\n      return false;\n    }\n\n    const dates = markedDates[day.toString('yyyy-MM-dd')] || EmptyArray;\n\n    if (dates.length || dates) {\n      return dates;\n    } else {\n      return false;\n    }\n  }\n\n  getState(day) {\n    const {disabledByDefault} = this.props;\n    const minDate = parseDate(this.props.minDate);\n    const maxDate = parseDate(this.props.maxDate);\n    let state = '';\n\n    if (disabledByDefault) {\n      state = 'disabled';\n    } else if (dateutils.isDateNotInTheRange(minDate, maxDate, day)) {\n      state = 'disabled';\n    } else if (!dateutils.sameMonth(day, this.state.currentMonth)) {\n      state = 'disabled';\n    } else if (dateutils.sameDate(day, XDate())) {\n      state = 'today';\n    }\n    return state;\n  }\n\n  onSwipe = gestureName => {\n    const {SWIPE_UP, SWIPE_DOWN, SWIPE_LEFT, SWIPE_RIGHT} = swipeDirections;\n\n    switch (gestureName) {\n      case SWIPE_UP:\n      case SWIPE_DOWN:\n        break;\n      case SWIPE_LEFT:\n        this.onSwipeLeft();\n        break;\n      case SWIPE_RIGHT:\n        this.onSwipeRight();\n        break;\n    }\n  };\n\n  onSwipeLeft = () => {\n    this.header.onPressRight();\n  };\n\n  onSwipeRight = () => {\n    this.header.onPressLeft();\n  };\n\n  renderWeekNumber(weekNumber) {\n    return (\n      <View style={this.style.dayContainer} key={`week-container-${weekNumber}`}>\n        <BasicDay\n          key={`week-${weekNumber}`}\n          marking={{disableTouchEvent: true}}\n          state=\"disabled\"\n          theme={this.props.theme}\n          testID={`${WEEK_NUMBER}-${weekNumber}`}\n        >\n          {weekNumber}\n        </BasicDay>\n      </View>\n    );\n  }\n\n  renderDay(day, id) {\n    const {hideExtraDays} = this.props;\n    const dayProps = extractComponentProps(Day, this.props);\n\n    if (!dateutils.sameMonth(day, this.state.currentMonth) && hideExtraDays) {\n      return <View key={id} style={this.style.emptyDayContainer} />;\n    }\n\n    return (\n      <View style={this.style.dayContainer} key={id}>\n        <Day\n          {...dayProps}\n          day={day}\n          state={this.getState(day)}\n          marking={this.getDateMarking(day)}\n          onPress={this.pressDay}\n          onLongPress={this.longPressDay}\n        />\n      </View>\n    );\n  }\n\n  renderWeek(days, id) {\n    const week = [];\n\n    days.forEach((day, id2) => {\n      week.push(this.renderDay(day, id2));\n    }, this);\n\n    if (this.props.showWeekNumbers) {\n      week.unshift(this.renderWeekNumber(days[days.length - 1].getWeek()));\n    }\n\n    return (\n      <View style={this.style.week} key={id}>\n        {week}\n      </View>\n    );\n  }\n\n  renderMonth() {\n    const {currentMonth} = this.state;\n    const {firstDay, showSixWeeks, hideExtraDays} = this.props;\n    const shouldShowSixWeeks = showSixWeeks && !hideExtraDays;\n    const days = dateutils.page(currentMonth, firstDay, shouldShowSixWeeks);\n    const weeks = [];\n\n    while (days.length) {\n      weeks.push(this.renderWeek(days.splice(0, 7), weeks.length));\n    }\n\n    return <View style={this.style.monthView}>{weeks}</View>;\n  }\n\n  renderHeader() {\n    const {customHeader, headerStyle, displayLoadingIndicator, markedDates, testID} = this.props;\n    const current = parseDate(this.props.current);\n    let indicator;\n\n    if (current) {\n      const lastMonthOfDay = current.clone().addMonths(1, true).setDate(1).addDays(-1).toString('yyyy-MM-dd');\n      if (displayLoadingIndicator && !(markedDates && markedDates[lastMonthOfDay])) {\n        indicator = true;\n      }\n    }\n\n    const headerProps = extractComponentProps(CalendarHeader, this.props);\n\n    const props = {\n      ...headerProps,\n      testID: testID,\n      style: headerStyle,\n      ref: c => (this.header = c),\n      month: this.state.currentMonth,\n      addMonth: this.addMonth,\n      displayLoadingIndicator: indicator\n    };\n\n    const CustomHeader = customHeader;\n    const HeaderComponent = customHeader ? CustomHeader : CalendarHeader;\n\n    return <HeaderComponent {...props} />;\n  }\n\n  render() {\n    const {enableSwipeMonths, style} = this.props;\n    const GestureComponent = enableSwipeMonths ? GestureRecognizer : View;\n    const gestureProps = enableSwipeMonths ? {onSwipe: (direction, state) => this.onSwipe(direction, state)} : {};\n\n    return (\n      <GestureComponent {...gestureProps}>\n        <View\n          style={[this.style.container, style]}\n          accessibilityElementsHidden={this.props.accessibilityElementsHidden} // iOS\n          importantForAccessibility={this.props.importantForAccessibility} // Android\n        >\n          {this.renderHeader()}\n          {this.renderMonth()}\n        </View>\n      </GestureComponent>\n    );\n  }\n}\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}